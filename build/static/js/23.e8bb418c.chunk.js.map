{"version":3,"sources":["../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/CardText.js","../node_modules/reactstrap/es/InputGroupAddon.js","../node_modules/reactstrap/es/Form.js","redux/actions/chats/index.js","../node_modules/react-feather/dist/icons/message-square.js","../node_modules/react-feather/dist/icons/send.js","views/chat/Chat.js","../node_modules/react-feather/dist/icons/search.js","views/chat/SidebarLeft.js","views/chat/UserProfileSidebar.js","views/chat/index.js"],"names":["propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","InputGroupText","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","children","node","type","size","oneOfType","number","bsSize","valid","bool","invalid","innerRef","func","plaintext","addon","Input","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","warnOnce","Component","InputGroup","CardText","addonType","oneOf","isRequired","InputGroupAddon","inline","Form","_Component","submit","MessageFragment","gql","setGlobalMessages","dispatch","SET_LOADER","payload","globalMessageQuery","client","query","data","handleAuthResponse","getGlobalMessages","success","roomData","getFieldValue","_","isEmpty","SET_GLOBAL_MESSAGES","console","error","removeGlobalMessages","addMessageToChannel","roomId","message","addMessageMutation","mutate","mutation","variables","input","addRoomMessage","addMessage","SET_LAST_MESSAGE","getGlobalMessagesSubscriptions","handleMessageAdded","gloabalMsgSubscription","observable","subscribe","globalMessages","updateGlobalMessage","messages","setCurrentChatMessages","currentChatMessageQuery","getCurrentChatMessages","length","SET_CURRENT_CHAT_MESSAGES","updateCurrentChatMessage","removeCurrentChatMessages","setMesageNotifications","notifications","SET_MESSAGE_NOTIFICATION","subsCurrentSeletedChat","handleCurrentChat","CurrentSeletedSubscription","currentChat","subsMessageNotifications","handleMessageNotification","messageNotificationSubscription","messageNotificationSubs","Object","assign","target","i","arguments","source","key","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","MessageSquare","forwardRef","_ref","_ref$color","color","_ref$size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","Send","x1","y1","x2","y2","points","ChatLog","handleUserSidebarRight","handleSidebar","userSidebarLeft","currentChatMessages","useSelector","state","chats","currentRoom","rooms","user","auth","chatArea","useRef","useDispatch","useState","msg","setMsg","useEffect","current","chatContainer","ReactDOM","findDOMNode","scrollTop","Number","MAX_SAFE_INTEGER","scrollToBottom","handleAvatarClick","obj","handleSendMsg","e","preventDefault","status","_id","trim","removeRoomNotifications","showToastMessage","ChatWrapper","PerfectScrollbar","users","name","profileImage","profilePicture","find","u","firstName","lastName","classnames","onClick","window","innerWidth","img","profileBg","content","initials","options","wheelPropagation","map","item","index","getChatTime","Date","parseInt","createdAt","onSubmit","value","onChange","placeholder","Button","Search","cx","cy","r","currentChatSub","chatRoomsSubs","notificationsSubs","SidebarLeft","store","sidebar","handleUserSidebarLeft","allUsers","onlineUsers","active","setActive","chatType","setChatType","searchValue","setSearchValue","setRoomId","handleOnlineUserHidden","setInterval","id","getAllUsers","subscription","unsubscribe","subsChatRooms","room","updateChatRooms","notificationArray","removeRooms","removeAllUsers","getUsersRoom","setCurrentRoom","handleUserClick","isRoomExists","contains","userIds","updateRoom","show","style","onlineUsersIds","pluck","allUsersExceptLoggedUser","filter","borderBottom","renderUsers","imgHeight","imgWidth","lastMessage","roomCreatedAt","currentUserNotifications","noti","userId","time","formatDateToMonthShort","messageIds","Badge","pill","UserProfileSidebar","userSidebarRight","AppChat","setUser","setSidebar","setUserSidebarRight","setUserSidebarLeft","Chat","handleUser"],"mappings":"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","file":"static/js/23.e8bb418c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import gql from 'graphql-tag'\r\nimport _ from 'underscore'\r\nimport client from '../../../graphql/client'\r\nimport { getFieldValue, handleAuthResponse } from '../../../utils'\r\nimport {SET_GLOBAL_MESSAGES, SET_LOADER, GET_USER_PROFILE, GET_CHAT_CONTACTS, SELECT_CHAT, SEND_MSG, SET_CURRENT_CHAT_MESSAGES, SET_LAST_MESSAGE, SET_MESSAGE_NOTIFICATION} from '../../types'\r\n\r\nconst MessageFragment = gql`\r\n    fragment MessageData on Message {\r\n        _id\r\n        roomId\r\n        message\r\n        createdAt\r\n        user{\r\n            _id\r\n            userName\r\n            firstName\r\n            lastName\r\n            profileImage\r\n            isImageOns3\r\n            profileBg\r\n        }\r\n    }\r\n`\r\nexport const setGlobalMessages = () => async dispatch => {\r\n    dispatch({\r\n        type: SET_LOADER,\r\n        payload: true\r\n    })\r\n    try {\r\n        const globalMessageQuery = gql`\r\n            query {\r\n                getGlobalMessages{\r\n                    statusCode\r\n                    success\r\n                    nextToken\r\n                    data{\r\n                        ...MessageData\r\n                    }\r\n                }\r\n            }\r\n            ${MessageFragment}\r\n        `\r\n        const {data} = await client.query({\r\n            query: globalMessageQuery\r\n        })\r\n        handleAuthResponse(data.getGlobalMessages)\r\n        const {success} = data.getGlobalMessages\r\n        if (success) {\r\n            const roomData = getFieldValue(data, 'getGlobalMessages.data')\r\n            if (!_.isEmpty(roomData)) {\r\n                dispatch({\r\n                    type: SET_GLOBAL_MESSAGES,\r\n                    payload: roomData\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeGlobalMessages = () => dispatch => {\r\n    dispatch({\r\n        type: SET_GLOBAL_MESSAGES,\r\n        payload: []\r\n    })\r\n}\r\n\r\nexport const addMessageToChannel = (roomId, message, type = null) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const addMessageMutation = type ? gql`\r\n            mutation addRoomMessage($input: MessageInput){\r\n                addRoomMessage(input: $input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    data{\r\n                        ...MessageData\r\n                    }\r\n                }\r\n            }\r\n        ${MessageFragment}\r\n        ` : gql`\r\n            mutation addMessage($input: MessageInput){\r\n                addMessage(input: $input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    data{\r\n                        ...MessageData\r\n                    }\r\n                }\r\n            }\r\n        ${MessageFragment}\r\n        `\r\n        const {data} = await client.mutate({\r\n            mutation: addMessageMutation,\r\n            variables: {\r\n                input: {\r\n                    roomId,\r\n                    message\r\n                }\r\n            }\r\n        })\r\n        handleAuthResponse(type ? data.addRoomMessage : data.addMessage)\r\n        if (type === \"private\") {\r\n            dispatch({\r\n                type: SET_LAST_MESSAGE,\r\n                payload: data.addRoomMessage.data\r\n            })\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const getGlobalMessagesSubscriptions = (handleMessageAdded) => async dispatch => {\r\n    try {\r\n        const gloabalMsgSubscription = gql`\r\n           subscription{\r\n            globalMessages{\r\n                    ...MessageData\r\n                }\r\n            }\r\n            ${MessageFragment}\r\n        `\r\n        const observable = client.subscribe({query:  gloabalMsgSubscription})\r\n        return observable.subscribe(({data}) =>  handleMessageAdded(data.globalMessages))\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateGlobalMessage = (messages) => dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_GLOBAL_MESSAGES,\r\n            payload: messages\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        \r\n    }\r\n}\r\n\r\nexport const setCurrentChatMessages = (roomId) => async dispatch => {\r\n    dispatch({\r\n        type: SET_LOADER,\r\n        payload: true\r\n    })\r\n    try {\r\n        const currentChatMessageQuery = gql`\r\n            query getCurrentChatByRoomId($roomId: String){\r\n                getCurrentChatMessages(roomId: $roomId){\r\n                    statusCode\r\n                    success\r\n                    nextToken\r\n                    data{\r\n                        ...MessageData\r\n                    }\r\n                }\r\n            }\r\n            ${MessageFragment}\r\n        `\r\n        const {data} = await client.query({\r\n            query: currentChatMessageQuery,\r\n            variables: {\r\n                roomId\r\n            }\r\n        })\r\n        handleAuthResponse(data.getCurrentChatMessages)\r\n        const {success} = data.getCurrentChatMessages\r\n        if (success) {\r\n            const messages = getFieldValue(data, 'getCurrentChatMessages.data')\r\n            if (messages && messages.length) { \r\n                dispatch({\r\n                    type: SET_CURRENT_CHAT_MESSAGES,\r\n                    payload: messages\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCurrentChatMessage = (messages) => dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_CURRENT_CHAT_MESSAGES,\r\n            payload: messages\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        \r\n    }\r\n}\r\n\r\nexport const removeCurrentChatMessages = () => dispatch => {\r\n    dispatch({\r\n        type: SET_CURRENT_CHAT_MESSAGES,\r\n        payload: []\r\n    })\r\n}\r\n\r\nexport const updateLastChatMessage = (message) => dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LAST_MESSAGE,\r\n            payload: message\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n    }\r\n}\r\n\r\nexport const setMesageNotifications = (notifications) => dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_MESSAGE_NOTIFICATION,\r\n            payload: notifications\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n    }\r\n}\r\n\r\n\r\n//Chat Subscriptions\r\nexport const subsCurrentSeletedChat = (handleCurrentChat) => dispatch => {\r\n    try {\r\n        const CurrentSeletedSubscription = gql`\r\n           subscription{\r\n            currentChat{\r\n                    ...MessageData\r\n                }\r\n            }\r\n            ${MessageFragment}\r\n        `\r\n        const observable = client.subscribe({query:  CurrentSeletedSubscription})\r\n        return observable.subscribe(({data}) => handleCurrentChat(data.currentChat)) \r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const subsLastMessage = (handleLastMessage) => dispatch => {\r\n    try {\r\n        const LastMessageSubscription = gql`\r\n        subscription{\r\n            lastMessageSubs {\r\n              _id\r\n              roomId\r\n              message\r\n              createdAt\r\n            }\r\n          }\r\n        `\r\n        const observable = client.subscribe({query:  LastMessageSubscription})\r\n        return observable.subscribe(({data}) => handleLastMessage(data.lastMessageSubs)) \r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const subsMessageNotifications = (handleMessageNotification) => dispatch => {\r\n    try {\r\n        const messageNotificationSubscription = gql`\r\n        subscription{\r\n            messageNotificationSubs {\r\n              _id\r\n              userId\r\n              roomId\r\n              messageIds\r\n              tag\r\n              createdAt\r\n              updatedAt\r\n              status\r\n            }\r\n          }\r\n        `\r\n        const observable = client.subscribe({query:  messageNotificationSubscription})\r\n        return observable.subscribe(({data}) => handleMessageNotification(data.messageNotificationSubs)) \r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar MessageSquare = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"\n  }));\n});\nMessageSquare.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMessageSquare.displayName = 'MessageSquare';\nexport default MessageSquare;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Send = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"22\",\n    y1: \"2\",\n    x2: \"11\",\n    y2: \"13\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"22 2 15 22 11 13 2 9 22 2\"\n  }));\n});\nSend.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSend.displayName = 'Send';\nexport default Send;","// ** React Imports\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Menu, Send, MessageSquare } from 'react-feather'\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  Input,\r\n  Button\r\n} from 'reactstrap'\r\nimport { getChatTime } from '../../utils'\r\nimport { addMessageToChannel } from '../../redux/actions/chats'\r\nimport { removeRoomNotifications } from '../../redux/actions/rooms'\r\nimport { showToastMessage } from '../../redux/actions/toastNotification'\r\n\r\nconst ChatLog = props => {\r\n  // ** Props & Store\r\n  const { handleUserSidebarRight, handleSidebar, userSidebarLeft } = props\r\n\r\n  let {currentChatMessages} = useSelector(state => state.chats)\r\n  currentChatMessages = currentChatMessages ? currentChatMessages : []\r\n\r\n  let {currentRoom} = useSelector(state => state.rooms)\r\n  currentRoom = currentRoom ? currentRoom : {}\r\n  \r\n  const {user} = useSelector(state => state.auth)\r\n\r\n  // ** Refs & Dispatch\r\n  const chatArea = useRef(null)\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [msg, setMsg] = useState('')\r\n\r\n  // ** Scroll to chat bottom\r\n  const scrollToBottom = () => {\r\n    const currentChatArea = chatArea?.current\r\n    if (currentChatArea) {\r\n      const chatContainer = ReactDOM.findDOMNode(chatArea.current)\r\n      if (chatContainer) {\r\n        chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** If user chat is not empty scrollToBottom\r\n  useEffect(() => {\r\n    if (currentChatMessages.length) {\r\n      scrollToBottom()\r\n    }\r\n  }, [currentChatMessages])\r\n\r\n  // ** Renders user chat\r\n  const renderChats = () => {\r\n    return currentChatMessages.length ? currentChatMessages.map((item, index) => {\r\n        return (\r\n        <div\r\n          key={index}\r\n          className={classnames('chat', {\r\n            'chat-left': item.user._id !== user._id\r\n          })}\r\n        >\r\n          <div className='chat-avatar'>\r\n            <Avatar\r\n              className='box-shadow-1 cursor-pointer'\r\n              img={item.user.profileImage}\r\n            />\r\n          </div>\r\n\r\n          <div className='chat-body'>\r\n              <div key={item._id} className='chat-content'>\r\n                <p>{item.message}</p>\r\n                <p className=\"chat-time\">{getChatTime(new Date(parseInt(item.createdAt)))}</p>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }) : \"\"\r\n  }\r\n\r\n  // ** Opens right sidebar & handles its data\r\n  const handleAvatarClick = obj => {\r\n    handleUserSidebarRight()\r\n  }\r\n\r\n  // ** On mobile screen open left sidebar on Start Conversation Click\r\n  const handleStartConversation = () => {\r\n    if (!Object.keys(currentRoom).length && !userSidebarLeft && window.innerWidth <= 1200) {\r\n      handleSidebar()\r\n    }\r\n  }\r\n\r\n  // ** Sends New Msg\r\n  const handleSendMsg = async e => {\r\n    e.preventDefault()\r\n    if (msg && currentRoom.type && currentRoom.status !== \"pending\" && currentRoom.status !== \"rejected\") {\r\n      dispatch(addMessageToChannel(currentRoom._id, msg.trim(), 'private'))\r\n      dispatch(removeRoomNotifications(currentRoom._id))\r\n      setMsg('')\r\n    } else {\r\n      if (msg.trim() !== \"\") {\r\n        dispatch(showToastMessage(\"Wait for user to approve your chat request\", 'error'))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ChatWrapper tag based on chat's length\r\n  const ChatWrapper = currentChatMessages.length ? PerfectScrollbar : 'div'\r\n  \r\n  const { type, users } = currentRoom\r\n  let { name, profilePicture: profileImage } = currentRoom\r\n  if (type === \"direct\") {\r\n    const {firstName, lastName, profilePicture} = users.find(u => u._id !== user._id)\r\n    name = `${firstName} ${lastName}`\r\n    profileImage = profilePicture\r\n  }\r\n\r\n  return (\r\n    <div className='chat-app-window'>\r\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(currentRoom).length })}>\r\n        <div className='start-chat-icon mb-1'>\r\n          <MessageSquare />\r\n        </div>\r\n        <h4 className='sidebar-toggle start-chat-text' onClick={handleStartConversation}>\r\n          Start Conversation\r\n        </h4>\r\n      </div>\r\n      {Object.keys(currentRoom).length ? (\r\n        <div className={classnames('active-chat', { 'd-none': Object.keys(currentRoom).length === 0 })}>\r\n          <div className='chat-navbar'>\r\n            <header className='chat-header'>\r\n              <div className='d-flex align-items-center'>\r\n                <div className='sidebar-toggle d-block d-lg-none mr-1' onClick={handleSidebar}>\r\n                  <Menu size={21} />\r\n                </div>\r\n                {type === \"direct\" ? (\r\n                  <Avatar\r\n                    className=\"avatar-border user-profile-toggle m-0 mr-1\"\r\n                    img={profileImage}\r\n                    onClick={() => handleAvatarClick({currentRoom})}\r\n                  />\r\n                ) : (\r\n                  <Avatar\r\n                    height=\"32\"\r\n                    color={currentRoom.profileBg}\r\n                    className=\"avatar-border user-profile-toggle m-0 mr-1\"\r\n                    content={currentRoom.name}\r\n                    initials\r\n                    onClick={() => handleAvatarClick(currentRoom)}\r\n                  />\r\n                )}\r\n                <h6 className='mb-0'>{name}</h6>\r\n              </div>\r\n            </header>\r\n          </div>\r\n\r\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\r\n            {currentChatMessages.length ? <div className='chats'>{renderChats()}</div> : null}\r\n          </ChatWrapper>\r\n\r\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\r\n            <InputGroup className='input-group-merge mr-1 form-send-message'>\r\n              <Input\r\n                value={msg}\r\n                onChange={e => setMsg(e.target.value)}\r\n                placeholder='Type your message here....'\r\n              />\r\n            </InputGroup>\r\n            <Button className='send' color='primary'>\r\n              <Send size={14} className='d-lg-none' />\r\n              <span className='d-none d-lg-block'>Send</span>\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatLog\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.displayName = 'Search';\nexport default Search;","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUsersRoom, removeRooms, subsChatRooms, updateChatRooms } from '@src/redux/actions/rooms'\r\nimport { handleOnlineUserHidden } from '@src/redux/actions/layout'\r\nimport { getAllUsers, removeAllUsers } from \"@store/actions/auth\"\r\n\r\n// ** Utils\r\nimport { formatDateToMonthShort } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Search, MessageSquare } from 'react-feather'\r\nimport { CardText, InputGroup, InputGroupAddon, Input, InputGroupText, Badge } from 'reactstrap'\r\nimport _ from 'underscore'\r\nimport { removeCurrentChatMessages, setCurrentChatMessages, subsCurrentSeletedChat, updateCurrentChatMessage, subsLastMessage, updateLastChatMessage, subsMessageNotifications, setMesageNotifications} from '../../redux/actions/chats'\r\nimport { setCurrentRoom, updateRoom, removeRoomNotifications } from '../../redux/actions/rooms'\r\n\r\nlet currentChatSub, chatRoomsSubs, lastMessageSubs, notificationsSubs\r\nconst SidebarLeft = props => {\r\n  // ** Props & Store\r\n  const { store, sidebar, handleSidebar, userSidebarLeft, handleUserSidebarLeft } = props\r\n  const {rooms, currentRoom} = useSelector(state => state.rooms)\r\n  const {user, allUsers, onlineUsers} = useSelector(state => state.auth)\r\n  \r\n  // ** Dispatch\r\n  const dispatch = useDispatch()\r\n  \r\n  // ** State\r\n  const [active, setActive] = useState({})\r\n  const [chatType, setChatType] = useState({})\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n  const [roomId, setRoomId] = useState(null)\r\n  \r\n  dispatch(handleOnlineUserHidden(false))\r\n  \r\n  // to clear active room notifications\r\n  window.setInterval(() => {\r\n    if (active?.id === roomId && currentRoom?.notifications?.length) {\r\n      dispatch(removeRoomNotifications(roomId))\r\n    }\r\n  }, 2000)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllUsers())\r\n\r\n    if (chatRoomsSubs && chatRoomsSubs.subscription) {\r\n      chatRoomsSubs.subscription.unsubscribe()\r\n    }\r\n    chatRoomsSubs = dispatch(subsChatRooms(room => {\r\n      dispatch(updateChatRooms(room))\r\n    }))\r\n\r\n  // useEffect(() => {\r\n  //   if (lastMessageSubs && lastMessageSubs.subscription) {\r\n  //     lastMessageSubs.subscription.unsubscribe()\r\n  //   }\r\n  //   lastMessageSubs = dispatch(subsLastMessage(message => {\r\n  //     dispatch(updateLastChatMessage(message))\r\n  //   }))\r\n  //   return () => {\r\n  //     if (lastMessageSubs && lastMessageSubs.subscription) {\r\n  //       lastMessageSubs.subscription.unsubscribe()\r\n  //     }\r\n  //   }\r\n  // }, [])\r\n\r\n    if (notificationsSubs && notificationsSubs.subscription) {\r\n      notificationsSubs.subscription.unsubscribe()\r\n    }\r\n    notificationsSubs = dispatch(subsMessageNotifications(notificationArray => {\r\n      dispatch(setMesageNotifications(notificationArray))\r\n    }))\r\n\r\n    return () => {\r\n      dispatch(removeRooms())\r\n      dispatch(removeAllUsers())\r\n\r\n      if (chatRoomsSubs && chatRoomsSubs.subscription) {\r\n        chatRoomsSubs.subscription.unsubscribe()\r\n      }\r\n\r\n      if (lastMessageSubs && lastMessageSubs.subscription) {\r\n        lastMessageSubs.subscription.unsubscribe()\r\n      }\r\n\r\n      if (notificationsSubs && notificationsSubs.subscription) {\r\n        notificationsSubs.subscription.unsubscribe()\r\n      }\r\n      \r\n    }\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    dispatch(getUsersRoom(false, searchValue))\r\n    return () => {\r\n      dispatch(removeRooms())\r\n      if (currentChatSub && currentChatSub.subscription) {\r\n        currentChatSub.subscription.unsubscribe()\r\n      }\r\n    }\r\n  }, [searchValue])\r\n\r\n  useEffect(() => {\r\n    if (chatType === \"contact\" && currentRoom) {\r\n      handleUserSidebarLeft()\r\n    }\r\n    if (currentRoom?.notifications?.length) {\r\n      dispatch(removeRoomNotifications(roomId))\r\n    }\r\n    return () => {\r\n      dispatch(removeCurrentChatMessages())\r\n      if (currentChatSub && currentChatSub.subscription) {\r\n        currentChatSub.subscription.unsubscribe()\r\n      }\r\n    }\r\n  }, [currentRoom])\r\n  \r\n  useEffect(() => {\r\n    if (roomId) {\r\n      dispatch(setCurrentChatMessages(roomId))\r\n      dispatch(setCurrentRoom(roomId))\r\n    }\r\n    if (currentChatSub && currentChatSub.subscription) {\r\n      currentChatSub.subscription.unsubscribe()\r\n    }\r\n    currentChatSub = dispatch(subsCurrentSeletedChat(messages => {\r\n      dispatch(updateCurrentChatMessage(messages))\r\n    }))\r\n    return () => {\r\n      dispatch(removeCurrentChatMessages())\r\n      if (currentChatSub && currentChatSub.subscription) {\r\n        currentChatSub.subscription.unsubscribe()\r\n      }\r\n    }\r\n  }, [roomId])\r\n  \r\n  // ** Handles User Chat Click\r\n  const handleUserClick = (type, id, name) => {\r\n    setChatType(type)\r\n    if (type === \"room\") {\r\n      setRoomId(id)\r\n      setActive({ type, id })\r\n    } else if (type === \"contact\") {\r\n      const isRoomExists = rooms.find(room => room.type === \"direct\" && _.contains(room.userIds, id))\r\n      if (!isRoomExists) {\r\n        dispatch(updateRoom({\r\n          name,\r\n          userIds: [id, user._id],\r\n          type: 'direct'\r\n        }))\r\n      } else {\r\n        setRoomId(isRoomExists._id)\r\n        setActive({ type: \"room\", id: isRoomExists._id })\r\n      }\r\n    }\r\n    if (sidebar === true) {\r\n      handleSidebar()\r\n    }\r\n  }\r\n\r\n  // ** Renders Rooms\r\n  const renderRooms = () => {\r\n    if (rooms && rooms.length) {\r\n      return rooms.map(item => {\r\n        const {  _id, lastMessage, createdAt: roomCreatedAt, profileBg, notifications, type, users } = item\r\n        let { name, profilePicture: profileImage } = item\r\n        if (type === \"direct\") {\r\n          const {firstName, lastName, profilePicture} = users.find(u => u._id !== user._id)\r\n          name = `${firstName} ${lastName}`\r\n          profileImage = profilePicture\r\n        }\r\n        const { message, createdAt } = lastMessage || {}\r\n        const currentUserNotifications = notifications?.find(noti => noti.userId === user._id)\r\n        const time = createdAt || roomCreatedAt ? formatDateToMonthShort(new Date(parseInt(createdAt || roomCreatedAt))) : \"\"\r\n        return (\r\n          <li\r\n            className={classnames({\r\n              active: active.type === \"room\" && active.id === _id\r\n            })}\r\n            key={_id}\r\n            onClick={() => handleUserClick(\"room\", _id)}\r\n          >\r\n            {type === \"direct\" ? (\r\n              <Avatar className=\"custom-size-avatar\" img={profileImage} />\r\n            ) : (\r\n              <Avatar\r\n                className=\"custom-size-avatar\"\r\n                color={profileBg}\r\n                content={name}\r\n                initials\r\n              />\r\n            )}\r\n            <div className=\"chat-info flex-grow-1\">\r\n              <h5 className=\"mb-0\">{name}</h5>\r\n              {message && (\r\n                <CardText className=\"text-truncate\">\r\n                  {message}\r\n                </CardText>\r\n              )}\r\n            </div>\r\n            <div className=\"chat-meta text-nowrap\">\r\n              {currentUserNotifications?.messageIds.length && !(active.type === \"room\" && active.id === _id) \r\n              ? (\r\n                <Badge className=\"float-right\" color=\"danger\" pill>\r\n                  {currentUserNotifications.messageIds.length}\r\n                </Badge>\r\n              ) \r\n              : time && \r\n              <small className=\"float-right mb-25 chat-time ml-25\">\r\n              {time}\r\n              </small>}\r\n            </div>\r\n          </li>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <li className='no-results show'>\r\n          <h6 className='mb-0'>No Rooms Found</h6>\r\n        </li>\r\n      )\r\n    }\r\n  }\r\n  \r\n  // ** Renders Rooms\r\n  const renderUsers = () => {\r\n    const onlineUsersIds = _.pluck(onlineUsers, \"_id\")\r\n    const allUsersExceptLoggedUser = allUsers.filter(item => item._id !== user._id)\r\n    if (allUsersExceptLoggedUser?.length) {\r\n      return allUsersExceptLoggedUser.map(item => {\r\n        const {  _id, firstName, lastName, profileImage } = item\r\n        return (\r\n          <li\r\n            className={classnames({\r\n              active: active.type === \"contact\" && active.id === _id\r\n            })}\r\n            key={_id}\r\n            onClick={() => handleUserClick(\"contact\", _id, `${firstName} ${lastName}`)}\r\n            style={{ borderBottom: \"1px solid #ebe9f1\" }}\r\n          >\r\n            <Avatar className=\"custom-size-avatar\" img={profileImage} status={_.contains(onlineUsersIds, _id) ? 'online' : 'offline'} />\r\n            <div className=\"chat-info flex-grow-1\">\r\n              <h5 className=\"mb-0\">\r\n                {firstName} {lastName}\r\n              </h5>\r\n            </div>\r\n          </li>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <li className='no-results show'>\r\n          <h6 className='mb-0'>No Users Found</h6>\r\n        </li>\r\n      )\r\n    }\r\n  }\r\n\r\n  // ** Handles Filter\r\n  const handleFilter = e => {\r\n    e.preventDefault()\r\n    setSearchValue(e.target.value)\r\n  }\r\n\r\n  return store ? (\r\n    <div className='sidebar-left'>\r\n      <div className='sidebar'>\r\n        <div\r\n          className={classnames('chat-profile-sidebar', {\r\n            show: userSidebarLeft\r\n          })}\r\n        >\r\n          <header className='chat-profile-header' style={{height: \"52px\"}}>\r\n            <h5 className='mt-2'>  <MessageSquare className='mr-75' size='18' />Start New Chat</h5>\r\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\r\n              <X size={14} />\r\n            </div>\r\n            {/* <div className='header-profile-sidebar'>\r\n              <Avatar className='box-shadow-1 avatar-border' img={userProfile.avatar} status={status} size='xl' />\r\n              <h4 className='chat-user-name'>{userProfile.fullName}</h4>\r\n              <span className='user-post'>{userProfile.role}</span>\r\n            </div> */}\r\n          </header>\r\n          <div className=\"sidebar-content\">\r\n            <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\r\n              <ul className='chat-users-list chat-list media-list'>{renderUsers()}</ul>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={classnames('sidebar-content', {\r\n            show: sidebar === true\r\n          })}\r\n        >\r\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\r\n            <X size={14} />\r\n          </div>\r\n          <div className='chat-fixed-search'>\r\n            <div className='d-flex align-items-center w-100'>\r\n              <div className='sidebar-profile-toggle'>\r\n                {Object.keys(user).length ? (\r\n                  <Avatar\r\n                    className='avatar-border'\r\n                    img={user.profileImage}\r\n                    status=\"online\"\r\n                    imgHeight='42'\r\n                    imgWidth='42'\r\n                  />\r\n                ) : null}\r\n              </div>\r\n              <InputGroup className='input-group-merge ml-1 w-100'>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText className='round'>\r\n                    <Search className='text-muted' size={14} />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  value={searchValue}\r\n                  className='round'\r\n                  placeholder='Search or start a new chat'\r\n                  onChange={handleFilter}\r\n                />\r\n              </InputGroup>\r\n              <div className=\"cursor-pointer\">\r\n                <MessageSquare className='ml-75' size='18' onClick={handleUserSidebarLeft} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\r\n            {/* <h4 className='chat-list-title'>Rooms</h4> */}\r\n            <ul className='chat-users-list chat-list media-list'>{renderRooms()}</ul>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default SidebarLeft\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X } from 'react-feather'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UserProfileSidebar = props => {\r\n  // ** Props\r\n  const { handleUserSidebarRight, userSidebarRight } = props\r\n\r\n  let {currentRoom} = useSelector(state => state.rooms)\r\n  currentRoom = currentRoom ? currentRoom : {}\r\n  const {user} = useSelector(state => state.auth)\r\n\r\n  const { type, users } = currentRoom\r\n  let { name, profilePicture: profileImage } = currentRoom\r\n  if (type === \"direct\") {\r\n    const {firstName, lastName, profilePicture} = users.find(u => u._id !== user._id)\r\n    name = `${firstName} ${lastName}`\r\n    profileImage = profilePicture\r\n  }\r\n\r\n  return (\r\n    <div className={classnames('user-profile-sidebar', { show: userSidebarRight === true })}>\r\n      {Object.keys(currentRoom).length ? (\r\n        <div>\r\n          <header className='user-profile-header'>\r\n            <span className='close-icon' onClick={handleUserSidebarRight}>\r\n              <X size={14} />\r\n            </span>\r\n            <div className='header-profile-sidebar'>\r\n              {currentRoom.type === \"direct\" ? (\r\n                <Avatar\r\n                  className='box-shadow-1 avatar-border'\r\n                  size='xl'\r\n                  img={profileImage}\r\n                  imgHeight='70'\r\n                  imgWidth='70'\r\n              />)\r\n                : (\r\n                  <Avatar\r\n                    className='box-shadow-1 avatar-border'\r\n                    size='xl'\r\n                    content={currentRoom.name} \r\n                    color={currentRoom.profileBg}\r\n                    imgHeight='70'\r\n                    imgWidth='70'\r\n                    initials\r\n                  />)\r\n              }\r\n\r\n              <h4 className='chat-user-name'>{name}</h4>\r\n            </div>\r\n          </header>\r\n          {currentRoom.type === \"private\" ? ( \r\n          <PerfectScrollbar className='user-profile-sidebar-area' options={{ wheelPropagation: false }}>\r\n            <div className='personal-info'>\r\n              <h6 className='section-label mb-1 mt-3'>Users</h6>\r\n              <ul className='list-unstyled'>\r\n                {currentRoom && currentRoom.users?.length && currentRoom.users.map(user => <li key={user._id} className='mb-1'>\r\n                    <Avatar\r\n                      className='box-shadow-1 avatar-border mr-50'\r\n                      size='sm'\r\n                      img={user.profilePicture}\r\n                      imgHeight='70'\r\n                      imgWidth='70'\r\n                    />\r\n                    <span className='align-middle'>{user.firstName} {user.lastName}</span>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </PerfectScrollbar>) \r\n          : null }\r\n        </div>\r\n      ) : null}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default UserProfileSidebar\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Chat App Component Imports\r\nimport Chat from './Chat'\r\nimport Sidebar from './SidebarLeft'\r\nimport UserProfileSidebar from './UserProfileSidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport '@styles/base/pages/app-chat.scss'\r\nimport '@styles/base/pages/app-chat-list.scss'\r\n\r\nconst AppChat = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.chats)\r\n\r\n  // ** States\r\n  const [user, setUser] = useState({})\r\n  const [sidebar, setSidebar] = useState(false)\r\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\r\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\r\n\r\n  // ** Sidebar & overlay toggle functions\r\n  const handleSidebar = () => setSidebar(!sidebar)\r\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\r\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\r\n  const handleOverlayClick = () => {\r\n    setSidebar(false)\r\n    setUserSidebarRight(false)\r\n    setUserSidebarLeft(false)\r\n  }\r\n\r\n  // ** Set user function for Right Sidebar\r\n  const handleUser = obj => setUser(obj)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        sidebar={sidebar}\r\n        handleSidebar={handleSidebar}\r\n        userSidebarLeft={userSidebarLeft}\r\n        handleUserSidebarLeft={handleUserSidebarLeft}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>\r\n            <div\r\n              className={classnames('body-content-overlay', {\r\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\r\n              })}\r\n              onClick={handleOverlayClick}\r\n            ></div>\r\n            <Chat\r\n              store={store}\r\n              handleUser={handleUser}\r\n              handleSidebar={handleSidebar}\r\n              userSidebarLeft={userSidebarLeft}\r\n              handleUserSidebarRight={handleUserSidebarRight}\r\n            />\r\n            <UserProfileSidebar\r\n              user={user}\r\n              userSidebarRight={userSidebarRight}\r\n              handleUserSidebarRight={handleUserSidebarRight}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AppChat\r\n"],"sourceRoot":""}