{"version":3,"sources":["redux/actions/layout/index.js","graphql/client.js","redux/actions/auth/index.js","history.js","utils/apiService.js","utility/Utils.js","utility/hooks/useSkin.js","redux/actions/rooms/index.js","redux/actions/dashboard/index.js","views/Dashboard/components/OnlineUserRow.js","views/Dashboard/components/ChallengeOnlineUserModal.js","views/Dashboard/components/OnlineUsers.js","@core/layouts/components/navbar/NotificationDropdown.js","@core/layouts/components/layout-wrapper/index.js","router/routes/Pages.js","router/routes/DashboardRoutes.js","router/routes/AdminRoutes.js","router/routes/index.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarType.js","utility/hooks/useNavbarColor.js","@core/layouts/components/navbar/IntlDropdown.js","@core/layouts/components/navbar/UserDropdown.js","redux/actions/reminders/index.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","@core/layouts/components/Menus/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","navigation/vertical/dashboards.js","navigation/vertical/adminRoutes.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","firebase.js","@core/components/app-collapse/index.js","@core/layouts/components/OnlineUserPopUp/index.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/dashboards.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js"],"names":["handleContentWidth","value","dispatch","type","HANDLE_CONTENT_WIDTH","handleMenuCollapsed","HANDLE_MENU_COLLAPSED","handleMenuHidden","HANDLE_MENU_HIDDEN","handleRTL","HANDLE_RTL","handleOnlineUserHidden","HANDLE_ONLINE_USER_HIDDEN","setAddEditPopup","ADD_EDIT_POPUP","setAddEditPopupData","ADD_EDIT_POPUP_DATA","setDisputePopup","DISPUTE_POPUP","toggleChallengeModal","TOGGLE_CHALLENGE_MODAL","toggleAdminDisputeModal","TOGGLE_ADMIN_DISPUTE_MODAL","httpUrl","CONSTANTS","BACKEND_BASE_URL","wsUrl","BACKEND_WS_URL","httpLink","ApolloLink","from","operation","forward","token","getAccessToken","setContext","headers","authorization","HttpLink","uri","wsLink","WebSocketLink","options","connectionParams","accessToken","lazy","reconnect","client","ApolloClient","link","split","defination","getMainDefinition","query","kind","cache","InMemoryCache","defaultOptions","fetchPolicy","UserFragemnt","gql","getUserData","userId","localStorage","getItem","userQuery","variables","id","data","handleAuthResponse","userById","getFieldValue","userData","console","error","getUserDetails","_","isEmpty","setItem","JSON","stringify","SET_USER_DETAIL","payload","loginUser","email","password","SET_LOADER","loginMutation","mutate","mutation","input","userLogin","success","message","loginWithgoogle","tokenId","googleId","loginGoogleMutation","userGoogleLogin","loginWithFacebook","loginFacebookMutation","userFacebookLogin","registerUser","registerData","userName","firstName","lastName","referralId","rank","registerUserMutation","logoutUser","logoutMutate","logOutUser","removeSigninUserDetails","REMOVE_USER_DETAIL","forgotPassUser","forgotPassMutation","forgotPassword","resetPassUser","resetToken","resetPassMutation","resetPassword","updateUserProfile","userProfileData","updateProfileMutation","updateProfile","updateUserPrefrences","preferences","setUserPrefrences","addUserFireBaseToken","addFireBaseTokenMutation","addFireBasetoken","changeUserPass","oldPassword","changePassMutation","changePassword","uploadProfilePhoto","imageData","authtoken","require","formData","FormData","append","request","result","onlineUserFragment","getAllOnlineUserSubs","handleUserAdded","onlineSubscription","subscribe","onlineUsers","updateOnlineUsers","user","isOnline","UPDATE_ONLINE_USERS","UPDATE_OFFLINE_USERS","getInitOnlineUsers","InitOnlineUser","getOnlineUsers","SET_ONLINE_USERS","removeOnlineUsers","REMOVE_ONLINE_USERS","getAllUsers","allUser","SET_ALL_USERS","removeAllUsers","history","createBrowserHistory","axios","url","method","Promise","resolve","reject","allowedMethodTypes","indexOf","toLowerCase","Error","then","response","catch","status","removeItem","push","isObjEmpty","obj","Object","keys","length","isToday","date","today","Date","getDate","getMonth","getFullYear","formatDateToMonthShort","toTimeForCurrentDay","formatting","month","day","hour","minute","Intl","DateTimeFormat","format","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","useSkin","useState","item","window","parse","themeConfig","layout","skin","setSkin","useEffect","element","document","body","classList","remove","add","dark","bordered","valueToStore","Function","SET_USERS_ROOMS","SET_ALL_ROOMS","DELETE_USER_ROOM","UPDATE_USER_ROOMS","SET_TOTAL","SET_CURRENT_ROOM","SET_PRIVATE_ROOM","REMOVE_MESSAGE_NOTIFICATION","getUsersRoom","makeGlobalVisible","searchString","RoomQuery","roomByUserId","roomData","getPaginatedRooms","limit","page","skip","getRooms","rooms","removeUsersRoom","removeRooms","updateRoom","name","userIds","addRoomMutation","addRoom","showToastMessage","deleteRoom","removeRoomMutation","_id","removeRoom","setCurrentRoom","updateChatRooms","room","subsChatRooms","handleChatRooms","chatRoomsSubscription","chatRoomSubs","removeRoomNotifications","removeRoomNotificationsMutation","roomId","SET_USER_DASHBOARD","SET_DASHBOARD_USER_ID","USER_ACTIVITIES","getDashboardDetails","DashboardQuery","stats","getUserActivities","getPaginatedUserActivities","setDashboardUserId","OnlineUserRow","index","canChallenge","useDispatch","handleClick","className","Media","profileImage","size","imgClassName","img","imgHeight","imgWidth","onClick","color","profileBg","content","initials","getFullNameFromUser","GAME_RANK","find","label","privateChallengeModal","useHistory","useSelector","state","toggleChallengePopup","addEditPopupData","Modal","isOpen","toggle","ModalHeader","location","origin","ModalBody","Button","connect","auth","showheader","scrollContainer","items","setItems","hasMore","setHasMore","setLoading","selectedRank","setSelectedRank","slice","Card","CardHeader","CardTitle","tag","UncontrolledTooltip","placement","target","CardBody","FormGroup","isClearable","classNamePrefix","wheelPropagation","dataLength","next","setTimeout","newUserList","startCursor","newArray","ARRAY_SIZE","i","newItem","loadItems","loader","scrollableTarget","filter","map","renderTasks","reminderSubs","LayoutWrapper","props","children","appLayout","wrapperClass","transition","routeMeta","store","navbarStore","navbar","contentWidth","Tag","Fragment","menuCollapsed","menuHidden","classnames","PagesRoutes","path","component","meta","publicRoute","DashboardRoutes","authRoute","exact","AdminRoutes","Routes","useFooterType","footer","footerType","setFooterType","useNavbarType","navbarType","setNavbarType","useNavbarColor","backgroundColor","navbarColor","setNavbarColor","IntlDropdown","intlContext","useContext","IntlContext","handleLangUpdate","e","lang","preventDefault","switchLanguage","UncontrolledDropdown","href","DropdownToggle","countryCode","locale","svg","en","nl","DropdownMenu","right","DropdownItem","isLoggedInUser","setUserLoggedIn","isUserLoggedIn","handleLogout","event","roles","join","charAt","Link","to","block","BELL_NOTIFICATIONS","UPDATE_BELL_NOTIFICATIONS","clearBellNotifications","types","clearBellNotification","clearUserBellNotification","NotificationDropdown","bellNotifications","dashboard","notifications","setNotifications","handleChallenges","bellNotificationQuery","getBellNotification","subscription","unsubscribe","reminder","updateReminders","ReminderSubscription","challengeNotifications","disputeNotifications","scoreUpdateNotifications","others","forEach","noti","REMINDER_TYPES","WL_SCORE_UPDATE","CHALLENGE","DISPUTE","Badge","pill","header","heading","title","pathname","section","log","handleNotificationClick","switch","left","avatarContent","avatarIcon","icon","Ripple","reload","NavbarUser","showOnlineUserPopup","showOnlinetoggler","setOnlineUserToggler","ROUTES_HIDE_ONLINE_POPUP","findIndex","li","ThemeToggler","OnlineUsersToggler","NavItem","NavLink","ThemeNavbar","setMenuVisibility","Menus","setIsOpen","showUserComp","Navbar","light","expand","NavbarToggler","Collapse","Nav","BlankLayout","navbarScrolled","setNavbarScrolled","layoutStore","isMounted","setIsMounted","innerWidth","windowWidth","setWindowWidth","menuVisibility","isHidden","addEventListener","pageYOffset","handleWindowWidth","undefined","bgColorCondition","floating","sticky","static","hidden","src","app","smallLogoImage","alt","scrollTop","showUnder","style","bottom","zIndex","Customizer","isRtl","setIsRtl","setLayout","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","transitionOptions","transitionValue","open","skinsArr","checked","radio","marginCondition","CustomInput","onChange","renderSkinsRadio","defaultValue","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","navLink","normalRoutes","dashboards","adminRoleRoutes","adminRoutes","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","appLogoImage","appName","isNavLinkActive","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","getAllParents","match","res","recurse","current","key","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","useLocation","includes","sideBarMenus","isUserAdminFromUser","matchPath","strict","arr","parents","searchParents","disabled","active","newTab","isActive","resetActiveGroup","badge","badgeText","VerticalNavMenuGroup","allParents","activeArr","splice","openArr","val","onCollapseClick","pop","toggleOpenGroup","VerticalNavMenuItems","VerticalNavMenuSectionHeader","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","loading","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","ref","onScrollY","container","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AppCollapse","accordion","titleKey","contentKey","openCollapse","setOpenCollapse","handleCollapseToggle","collapsed","defaultProps","ThemeColors","OnlineUsers","trackBgColor","userSubcription","isUserPresent","ou","messaging","getToken","web","footerClasses","show","customizer","VerticalLayout","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","height","maxHeight","overflowY","ddRef","width","closest","styles","Dropdown","modifiers","HorizontalNavMenuItems","AbilityContext","RenderNavItems","ability","hasAnyVisibleChild","can","action","resource","canViewMenuGroup","canViewMenuItem","HorizontalMenu","HorizontalLayout","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","Layouts","FinalRoute","route","adminRoute","isUserAdmin","basename","process","REACT_APP_BASENAME","LayoutTag","LayoutRoutes","LayoutPaths","LayoutRoutesAndPaths","render","assign","fallback","App"],"mappings":"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","file":"static/js/16.ef11c315.chunk.js","sourcesContent":["import {HANDLE_CONTENT_WIDTH, HANDLE_MENU_COLLAPSED, HANDLE_MENU_HIDDEN, HANDLE_RTL, HANDLE_ONLINE_USER_HIDDEN, ADD_EDIT_POPUP, ADD_EDIT_POPUP_DATA, DISPUTE_POPUP, TOGGLE_CHALLENGE_MODAL, TOGGLE_ADMIN_DISPUTE_MODAL} from '@src/redux/types'\r\n\r\n\r\n// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: HANDLE_CONTENT_WIDTH, value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: HANDLE_MENU_COLLAPSED, value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: HANDLE_MENU_HIDDEN, value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: HANDLE_RTL, value })\r\n\r\nexport const handleStaticPage = value => dispatch => dispatch({ type: HANDLE_STATIC_PAGE, value })\r\n\r\nexport const handleOnlineUserHidden = value => dispatch => dispatch({ type: HANDLE_ONLINE_USER_HIDDEN, value})\r\n\r\nexport const setAddEditPopup = value => dispatch => {\r\n    dispatch({ \r\n        type: ADD_EDIT_POPUP,\r\n        value\r\n    })\r\n}\r\n\r\nexport const setAddEditPopupData = value => dispatch => dispatch({\r\n    type:ADD_EDIT_POPUP_DATA,\r\n    value\r\n})\r\n\r\nexport const setDisputePopup = value => dispatch => {\r\n    dispatch({ \r\n        type: DISPUTE_POPUP,\r\n        value\r\n    })\r\n}\r\n\r\nexport const toggleChallengeModal = value => dispatch => {\r\n    dispatch({ \r\n        type: TOGGLE_CHALLENGE_MODAL,\r\n        value\r\n    })\r\n}\r\n\r\nexport const toggleAdminDisputeModal = value => dispatch => {\r\n    dispatch({ \r\n        type: TOGGLE_ADMIN_DISPUTE_MODAL,\r\n        value\r\n    })\r\n}","import {\r\n  ApolloClient, ApolloLink, HttpLink, InMemoryCache, split\r\n} from 'apollo-boost'\r\nimport { WebSocketLink } from 'apollo-link-ws'\r\nimport { getMainDefinition } from 'apollo-utilities'\r\nimport { CONSTANTS } from '../utils/CONSTANTS'\r\nimport { getAccessToken } from '../utils/'\r\n\r\n\r\nconst httpUrl = `${CONSTANTS.BACKEND_BASE_URL}/graphql`\r\nconst wsUrl = `${CONSTANTS.BACKEND_WS_URL}/graphql`\r\n\r\nconst httpLink = ApolloLink.from([\r\n  new ApolloLink((operation, forward) => {\r\n    const token = getAccessToken()\r\n    if (token) {\r\n      operation.setContext({headers: {authorization: `Bearer ${token}`}})\r\n    }\r\n    return forward(operation)\r\n  }),\r\n  new HttpLink({uri: httpUrl})\r\n])\r\n\r\nconst wsLink = new WebSocketLink({ uri:wsUrl, \r\n  options: { \r\n    connectionParams: () =>  ({ \r\n      accessToken:getAccessToken() \r\n    }),\r\n  lazy: true,\r\n  reconnect: true\r\n}})\r\n\r\nconst isSubscription = (operation) => {\r\n  const defination = getMainDefinition(operation.query)\r\n  return defination.kind === \"OperationDefinition\" && defination.operation === 'subscription'\r\n}\r\n\r\nconst client = new ApolloClient({\r\n  link: split(isSubscription, wsLink, httpLink),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: { query: { fetchPolicy: 'no-cache' } }\r\n})\r\n\r\nexport default client\r\n","import gql from 'graphql-tag'\r\nimport {SET_USER_DETAIL, REMOVE_USER_DETAIL, SET_ONLINE_USERS, REMOVE_ONLINE_USERS, UPDATE_ONLINE_USERS, SET_LOADER, UPDATE_OFFLINE_USERS, SET_ALL_USERS} from '../../types'\r\nimport client from '../../../graphql/client'\r\nimport { CONSTANTS } from '../../../utils/CONSTANTS'\r\nimport {getFieldValue, handleAuthResponse, removeSigninUserDetails} from '../../../utils'\r\nimport {request} from '../../../utils/apiService'\r\nimport _ from 'underscore'\r\n\r\nconst UserFragemnt = gql`\r\n    fragment UserDetail on Users{\r\n        _id\r\n        firstName\r\n        lastName\r\n        email\r\n        method\r\n        googleId\r\n        facebookId\r\n        firebase{\r\n            web\r\n        }\r\n        roles\r\n        userName\r\n        profileImage\r\n        isImageOns3\r\n        profileBg\r\n        ability{\r\n            action\r\n            subject\r\n        }\r\n        verificationToken\r\n        status\r\n        isOnline\r\n        bio\r\n        birthDate\r\n        country\r\n        phone\r\n        playStationId\r\n        xboxId\r\n        preferences{\r\n            payment\r\n            deposit\r\n            withdraw\r\n            chat\r\n            challange\r\n        }\r\n        epicGamesId\r\n        accountNumber\r\n        ibanNumber\r\n        paypalEmail\r\n        createdAt\r\n        updatedAt\r\n        rank\r\n        instagram\r\n        twitch\r\n    }\r\n`\r\n\r\n\r\nconst getUserData = async () => {\r\n    const userId = localStorage.getItem('userId')\r\n    try {\r\n        if (userId) {\r\n            const userQuery = gql`\r\n                query userById($id: ID!){\r\n                    userById(id: $id){\r\n                        statusCode\r\n                        success\r\n                        nextToken\r\n                        message\r\n                        user{\r\n                            ...UserDetail\r\n                        }\r\n                    }\r\n                }\r\n            ${UserFragemnt}\r\n            `\r\n            const {data} = await client.query({\r\n                query: userQuery,\r\n                variables: {\r\n                    id: userId\r\n                }\r\n            })\r\n            handleAuthResponse(data.userById)\r\n            if (getFieldValue(data, 'userById.success')) {\r\n                const userData = getFieldValue(data, 'userById.user')\r\n                return userData\r\n            }\r\n            return {}\r\n        }\r\n        return {}\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        return {}\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async dispatch => {\r\n    const userData = await getUserData()\r\n    if (!_.isEmpty(userData)) {\r\n        localStorage.setItem('userData', JSON.stringify(userData))\r\n        dispatch({\r\n            type: SET_USER_DETAIL,\r\n            payload: userData\r\n        })\r\n        return userData\r\n    }\r\n    return false\r\n}\r\n\r\nexport const removeUserDetails = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_USER_DETAIL,\r\n        payload: {}\r\n    })\r\n}\r\n\r\nexport const loginUser =  ({email, password}) => async dispatch => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const loginMutation = gql`\r\n        mutation userLogin($input: LoginInput){\r\n            userLogin(input:$input){\r\n                success\r\n                statusCode\r\n                token\r\n                user{\r\n                    ...UserDetail\r\n                }\r\n            }\r\n        }\r\n            ${UserFragemnt}`\r\n        const {data} = await client.mutate({\r\n            mutation: loginMutation,\r\n            variables: {\r\n                input: {\r\n                    email,\r\n                    password\r\n                }\r\n            }\r\n        })\r\n        if (data.userLogin.success) {\r\n            localStorage.setItem('authToken', getFieldValue(data, 'userLogin.token'))\r\n            localStorage.setItem('userId', getFieldValue(data, 'userLogin.user._id'))\r\n            localStorage.setItem('userData', JSON.stringify(getFieldValue(data, 'userLogin.user')))\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.userLogin\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        console.error('error: ', error)\r\n        return {success:false, message:[error.message]}\r\n    }\r\n}\r\n\r\nexport const loginWithgoogle = (tokenId, googleId) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const loginGoogleMutation = gql`\r\n            mutation userGoogleLogin($input: LoginGoogleInput){\r\n                userGoogleLogin(input: $input){\r\n                    success\r\n                    statusCode\r\n                    token\r\n                    user{\r\n                        ...UserDetail\r\n                    }\r\n                }\r\n            }\r\n            ${UserFragemnt}`\r\n        const {data} = await client.mutate({\r\n            mutation: loginGoogleMutation,\r\n            variables: {\r\n                input: {\r\n                    tokenId, \r\n                    googleId\r\n                }\r\n            }\r\n        })\r\n        if (data.userGoogleLogin.success) {\r\n            localStorage.setItem('authToken', getFieldValue(data, 'userGoogleLogin.token'))\r\n            localStorage.setItem('userId', getFieldValue(data, 'userGoogleLogin.user._id'))\r\n            localStorage.setItem('userData', JSON.stringify(getFieldValue(data, 'userGoogleLogin.user')))\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.userGoogleLogin\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        return {success:false, message:[error.message]}\r\n    }\r\n} \r\n\r\nexport const loginWithFacebook = (accessToken, userId) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const loginFacebookMutation = gql`\r\n            mutation userFacebookLogin($input: LoginFbInput){\r\n                userFacebookLogin(input:$input){\r\n                    success\r\n                    statusCode\r\n                    token\r\n                    user{\r\n                        ...UserDetail\r\n                    }\r\n                }\r\n            }\r\n            ${UserFragemnt}`\r\n        const {data} = await client.mutate({\r\n            mutation: loginFacebookMutation,\r\n            variables: {\r\n                input: {\r\n                    accessToken, \r\n                    userId\r\n                }\r\n            }\r\n        })\r\n        if (data.userFacebookLogin.success) {\r\n            localStorage.setItem('authToken', getFieldValue(data, 'userFacebookLogin.token'))\r\n            localStorage.setItem('userId', getFieldValue(data, 'userFacebookLogin.user._id'))\r\n            localStorage.setItem('userData', JSON.stringify(getFieldValue(data, 'userFacebookLogin.user')))\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.userFacebookLogin\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        return {success:false, message:[error.message]}\r\n    }\r\n} \r\n\r\nexport const registerUser = (registerData) => async dispatch => {\r\n    try {\r\n        const {email, password, userName, firstName, lastName, referralId, rank} = registerData\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const registerUserMutation = gql`\r\n            mutation registerUser($input: RegisterInput){\r\n                registerUser:registerUser(input: $input){\r\n                    _id\r\n                    firstName\r\n                    lastName\r\n                    email\r\n                    passwordVerificationToken\r\n                    createdAt\r\n                    updatedAt\r\n                    verificationToken\r\n                    roles\r\n                }\r\n            }\r\n        `\r\n        const input = {\r\n            email,\r\n            password,\r\n            userName,\r\n            firstName,\r\n            lastName, \r\n            rank\r\n        }\r\n        if (referralId) {\r\n            input['referralId'] = referralId\r\n        }\r\n        const {data} = await client.mutate({\r\n            mutation: registerUserMutation,\r\n            variables: {\r\n                input\r\n            }\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return true\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return false\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async dispatch => {\r\n    const logoutMutate = gql`\r\n        mutation {\r\n            logOutUser{\r\n                statusCode\r\n                success\r\n                message\r\n            }\r\n        }\r\n    `\r\n    const {data} = await client.mutate({\r\n        mutation: logoutMutate\r\n    })\r\n    if (data.logOutUser.success) {\r\n        removeSigninUserDetails()\r\n        dispatch({\r\n            type: REMOVE_USER_DETAIL,\r\n            payload: {}\r\n        })\r\n    }\r\n    return data.logOutUser\r\n}\r\n\r\nexport const forgotPassUser = email => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const forgotPassMutation = gql`\r\n            mutation forgotPassword($email:String){\r\n                forgotPassword(email:$email){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                }\r\n            }\r\n        `\r\n        const {data} = await client.mutate({\r\n            mutation: forgotPassMutation,\r\n            variables: {\r\n                email\r\n            }\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.forgotPassword\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return {success:false, message: error.message}\r\n    }\r\n}\r\n\r\nexport const resetPassUser = (resetToken, password) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const resetPassMutation = gql`\r\n            mutation resetPassword($input:ResetPasswordInput){\r\n                resetPassword(input:$input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                }\r\n            }\r\n        `\r\n        const {data} = await client.mutate({\r\n            mutation: resetPassMutation,\r\n            variables: {\r\n                input: {\r\n                    resetToken,\r\n                    password\r\n                }\r\n            }\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.resetPassword\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return {success:false, message: error.message}\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (userProfileData) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const updateProfileMutation = gql`\r\n           mutation updateProfile($input: ProfileInput){\r\n                updateProfile(input: $input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    user{\r\n                        ...UserDetail\r\n                    }\r\n                }\r\n            }\r\n            ${UserFragemnt}\r\n        `\r\n        const {data} = await client.mutate({\r\n            mutation: updateProfileMutation,\r\n            variables: {\r\n                input: userProfileData\r\n            }\r\n        })\r\n        handleAuthResponse(data.updateProfile)\r\n        const {success} = data.updateProfile\r\n        if (success) {\r\n            const userData = getFieldValue(data, 'updateProfile.user')\r\n            if (!_.isEmpty(userData)) {\r\n                localStorage.setItem('userData', JSON.stringify(userData))\r\n                dispatch({\r\n                    type: SET_USER_DETAIL,\r\n                    payload: userData\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.updateProfile\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return {success:false, message: error.message}\r\n    }\r\n}\r\n\r\nexport const updateUserPrefrences = (preferences) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const updateProfileMutation = gql`\r\n           mutation setUserPrefrences($preferences: userPrefrencesInput){\r\n            setUserPrefrences(input: $preferences){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    user{\r\n                        ...UserDetail\r\n                    }\r\n                }\r\n            }\r\n            ${UserFragemnt}\r\n        `\r\n        const {data} = await client.mutate({\r\n            mutation: updateProfileMutation,\r\n            variables: {\r\n                preferences\r\n            } \r\n        })\r\n        handleAuthResponse(data.setUserPrefrences)\r\n        const {success} = data.setUserPrefrences\r\n        if (success) {\r\n            const userData = getFieldValue(data, 'setUserPrefrences.user')\r\n            if (!_.isEmpty(userData)) {\r\n                localStorage.setItem('userData', JSON.stringify(userData))\r\n                dispatch({\r\n                    type: SET_USER_DETAIL,\r\n                    payload: userData\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.updateProfile\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return {success:false, message: error.message}\r\n    }\r\n}\r\n\r\nexport const addUserFireBaseToken = (token) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const addFireBaseTokenMutation = gql`\r\n           mutation addFireBasetoken($token: String){\r\n                addFireBasetoken(token: $token){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    user{\r\n                        ...UserDetail\r\n                    }\r\n                }\r\n            }\r\n            ${UserFragemnt}\r\n        `\r\n        const {data} = await client.mutate({\r\n            mutation: addFireBaseTokenMutation,\r\n            variables: {\r\n                token\r\n            }\r\n        })\r\n        handleAuthResponse(data.addFireBasetoken)\r\n        const {success} = data.addFireBasetoken\r\n        if (success) {\r\n            const userData = getFieldValue(data, 'updateProfile.user')\r\n            if (!_.isEmpty(userData)) {\r\n                localStorage.setItem('userData', JSON.stringify(userData))\r\n                dispatch({\r\n                    type: SET_USER_DETAIL,\r\n                    payload: userData\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.addFireBasetoken\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return {success:false, message: error.message}\r\n    }\r\n}\r\n\r\nexport const changeUserPass = (password, oldPassword) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const changePassMutation = gql`\r\n            mutation changePassword($input: ChangePasswordInput){\r\n                changePassword(input:$input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                }\r\n            }\r\n        `\r\n        const {data} = await client.mutate({\r\n            mutation: changePassMutation,\r\n            variables: {\r\n                input: {\r\n                    password,\r\n                    oldPassword\r\n                }\r\n            }\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.changePassword\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return {success:false, message: error.message}\r\n    }\r\n}\r\n\r\nexport const uploadProfilePhoto = (imageData) => async dispatch => {\r\n    const authtoken = localStorage.getItem('authToken')\r\n    const userId = localStorage.getItem('userId')\r\n    const {getFieldValue} = require('../../../utils')\r\n    const _ = require('underscore')\r\n\r\n    const headers = {\r\n        // 'Content-Type':'multipart/form-data',\r\n        \"x-auth-token\": authtoken,\r\n        \"x-user-id\": userId\r\n    }\r\n    const formData = new FormData()\r\n    formData.append('document', imageData)\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const result = await request(\r\n            `${CONSTANTS.BACKEND_BASE_URL}/users/profile-photo`,\r\n            'post',\r\n            headers,\r\n            formData\r\n        )\r\n        const userData = await getUserData(getFieldValue(result, 'data.user'))\r\n        if (!_.isEmpty(userData)) {\r\n            handleAuthResponse(result.data)\r\n            if (!_.isEmpty(userData)) {\r\n                dispatch({\r\n                    type: SET_USER_DETAIL,\r\n                    payload: userData\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return result.data\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        return {success:false, message:[error.message]}\r\n    }\r\n} \r\n\r\nexport const setLoader = value => dispatch => {\r\n    dispatch({\r\n        type: SET_LOADER,\r\n        payload: value\r\n    }, 4000)\r\n}\r\nconst onlineUserFragment = gql`\r\n    fragment onlineUserDetail on Users{\r\n        _id\r\n        firstName\r\n        lastName\r\n        lastName   \r\n        profileImage\r\n        isImageOns3 \r\n        profileBg \r\n        updatedAt\r\n        isOnline\r\n        rank\r\n        userName\r\n    }\r\n`\r\nexport const getAllOnlineUserSubs = (handleUserAdded) => dispatch => {\r\n    try {\r\n        const onlineSubscription = gql`\r\n           subscription{\r\n                onlineUsers{\r\n                    ...onlineUserDetail\r\n                }\r\n            }\r\n            ${onlineUserFragment}\r\n        `\r\n        const observable = client.subscribe({query:  onlineSubscription})\r\n        return observable.subscribe(({data}) =>  handleUserAdded(data.onlineUsers))\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateOnlineUsers = (user) => dispatch => {\r\n    if (user.isOnline) {\r\n        dispatch({\r\n            type: UPDATE_ONLINE_USERS,\r\n            payload: {user}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: UPDATE_OFFLINE_USERS,\r\n            payload: {user}\r\n        })\r\n    }\r\n}\r\n\r\nexport const getInitOnlineUsers = () => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const InitOnlineUser = gql`\r\n            mutation{\r\n                getOnlineUsers{\r\n                    statusCode\r\n                    success\r\n                    nextToken\r\n                    data{\r\n                        ...onlineUserDetail\r\n                    }\r\n                }\r\n            }\r\n            ${onlineUserFragment}\r\n        `\r\n        const result = await client.mutate({\r\n            mutation:InitOnlineUser\r\n        })\r\n        const data = result.data\r\n        handleAuthResponse(data.getOnlineUsers)\r\n        dispatch({\r\n            type: SET_ONLINE_USERS,\r\n            payload: data.getOnlineUsers.data\r\n        })\r\n\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeOnlineUsers = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_ONLINE_USERS\r\n    })\r\n}\r\n\r\nexport const getAllUsers = () => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const allUser = gql`\r\n          query {\r\n            users {\r\n              statusCode\r\n              success\r\n              nextToken\r\n              data {\r\n                _id\r\n                firstName\r\n                lastName\r\n                email\r\n                profileImage\r\n                profileBg\r\n              }\r\n            }\r\n          }\r\n        `\r\n        const result = await client.query({\r\n            query:allUser\r\n        })\r\n        const data = result.data\r\n        //handleAuthResponse(data.users)\r\n        dispatch({\r\n            type: SET_ALL_USERS,\r\n            payload: getFieldValue(data, \"users.data\") || []\r\n        })\r\n\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAllUsers = () => dispatch => {\r\n    dispatch({\r\n        type: SET_ALL_USERS,\r\n        payload: []\r\n    })\r\n}","import { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n","// import { history } from '../App'\r\nimport { history } from '../history' \r\nconst axios = require('axios')\r\n\r\n/**\r\n * [request description]\r\n * @param  {[string]} url       URL of the API which needs to be consumed by client\r\n * @param  {[string]} method    Method type of the API call currently GET,POST,PUT,DELETE is supported in order suport to more methods add method name to the array -> allowedMethodTypes\r\n * @param  {[JSON]} payload     Payload to be provided to server for sending data\r\n * @param  {[string]} headers   Request Headers required by the server side to process the API call\r\n * @return {[JSON]}             Response provided by the server side code\r\n */\r\n\r\nexport function request(url, method, headers, payload) {\r\n  return new Promise((resolve, reject) => {\r\n    const allowedMethodTypes = ['get', 'post', 'put', 'delete']\r\n    if (allowedMethodTypes.indexOf(method.toLowerCase()) < 0) {\r\n      throw new Error(\r\n        `Invalid method type please provide one of these methods... \\n ${allowedMethodTypes}`\r\n      )\r\n    } else {\r\n      axios({\r\n        method,\r\n        url,\r\n        data: payload,\r\n        headers\r\n      })\r\n        .then((response) => {\r\n          // response fetched successfully\r\n          resolve(response)\r\n          /* response.headers['x-auth-token'] && localStorage.setItem('token', response.headers['x-auth-token'])  */\r\n        })\r\n        .catch((error) => {\r\n          // error from api\r\n          if (error.response && error.response.status === 440) {\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('areMapTermsAgreed')\r\n            localStorage.removeItem('mapType')\r\n            localStorage.removeItem('mapCenter')\r\n            localStorage.removeItem('mapZoom')\r\n            localStorage.removeItem('selectedMapArea')\r\n            history.push('/login')\r\n          }\r\n          reject(error)\r\n        })\r\n    }\r\n  })\r\n}\r\n\r\n// module.exports = {\r\n//   request\r\n// }\r\n","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  if (value) {\r\n    const date = new Date(value)\r\n    let formatting = { month: 'short', day: 'numeric' }\r\n  \r\n    if (toTimeForCurrentDay && isToday(date)) {\r\n      formatting = { hour: 'numeric', minute: 'numeric' }\r\n    }\r\n  \r\n    return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n  }\r\n  return \"\"\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () =>  {\r\n  return localStorage.getItem('userData') ? JSON.parse(localStorage.getItem('userData')) : {}\r\n}\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#1061ae1a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#1061ae', // for tags bg-color\r\n    neutral20: '#1061ae', // for input border-color\r\n    neutral30: '#1061ae' // for input hover border-color\r\n  }\r\n})\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.error(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","import gql from 'graphql-tag'\r\nimport _ from 'underscore'\r\nimport client from '../../../graphql/client'\r\nimport { getFieldValue, handleAuthResponse } from '../../../utils'\r\nimport { showToastMessage } from '../toastNotification'\r\n\r\nconst {SET_USERS_ROOMS, SET_ALL_ROOMS, DELETE_USER_ROOM, UPDATE_USER_ROOMS, SET_LOADER, SET_TOTAL, SET_CURRENT_ROOM, SET_PRIVATE_ROOM, REMOVE_MESSAGE_NOTIFICATION} = require('../../types')\r\n\r\nexport const getUsersRoom = (makeGlobalVisible = false, searchString = \"\") => async dispatch => {\r\n    try {\r\n        const RoomQuery = gql`\r\n          query roomByUserId($makeGlobalVisible: Boolean, $searchString:String){\r\n            roomByUserId(makeGlobalVisible: $makeGlobalVisible, searchString:$searchString){\r\n              statusCode\r\n              success\r\n              data {\r\n                _id\r\n                name\r\n                userIds\r\n                type\r\n                createdAt\r\n                default\r\n                profileBg\r\n                lastMessage {\r\n                  message\r\n                  createdAt\r\n                }\r\n                notifications{\r\n                    _id\r\n                    messageIds\r\n                    roomId\r\n                    userId\r\n                }\r\n                users {\r\n                    _id\r\n                    firstName\r\n                    lastName\r\n                    profilePicture\r\n                }\r\n              }\r\n              nextToken\r\n            }\r\n          }\r\n        `\r\n        const {data} = await client.query({\r\n            query: RoomQuery,\r\n            variables: {\r\n                makeGlobalVisible,\r\n                searchString\r\n            }\r\n        })\r\n        handleAuthResponse(data.roomByUserId)\r\n        const {success} = data.roomByUserId\r\n       if (success) {\r\n            const roomData = getFieldValue(data, 'roomByUserId.data')\r\n            if (!_.isEmpty(roomData)) {\r\n                dispatch({\r\n                    type: SET_USERS_ROOMS,\r\n                    payload: roomData\r\n                })\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n    }\r\n}\r\n\r\nexport const getPaginatedRooms = (limit, page, searchString, type) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const RoomQuery = gql`\r\n             query getRooms($limit: Int, $skip: Int, $searchString:String, $type: String){\r\n                getRooms(limit: $limit, skip: $skip, searchString:$searchString, type:$type){\r\n                statusCode\r\n                success\r\n                message\r\n                data{\r\n                    totalPages\r\n                    skip\r\n                    limit\r\n                    data{\r\n                        _id\r\n                        name\r\n                        userIds\r\n                        userNames\r\n                        type\r\n                        default\r\n                        profileBg\r\n                    }\r\n                }\r\n                nextToken\r\n            }\r\n          }`\r\n        const {data} = await client.query({\r\n            query: RoomQuery,\r\n            variables: {\r\n                limit, \r\n                skip: (page * limit),\r\n                searchString,\r\n                type\r\n            }\r\n        })\r\n        handleAuthResponse(data.getRooms)\r\n        const {success} = data.getRooms\r\n        if (success) {\r\n            const rooms = getFieldValue(data, 'getRooms.data.data')\r\n            if (!_.isEmpty(rooms)) {\r\n                dispatch({\r\n                    type: SET_ALL_ROOMS,\r\n                    payload: rooms\r\n                })\r\n                dispatch({\r\n                    type: SET_TOTAL,\r\n                    payload: getFieldValue(data, 'getRooms.data.totalPages')\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: SET_ALL_ROOMS,\r\n                    payload: []\r\n                })\r\n                dispatch({\r\n                    type: SET_TOTAL,\r\n                    payload: 0\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_ALL_ROOMS,\r\n            payload: []\r\n        })\r\n        dispatch({\r\n            type: SET_TOTAL,\r\n            payload: 0\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const getRooms = () => async dispatch => {\r\n    try {\r\n        const RoomQuery = gql`\r\n            query{\r\n                rooms{\r\n                    statusCode\r\n                    success\r\n                    data{\r\n                        _id\r\n                        name\r\n                        userIds\r\n                        type\r\n                        default\r\n                        profileBg\r\n                    }\r\n                    nextToken\r\n                }\r\n            }\r\n        `\r\n        const {data} = await client.query({\r\n            query: RoomQuery\r\n        })\r\n        handleAuthResponse(data.rooms)\r\n        const {success} = data.rooms\r\n        if (success) {\r\n            const roomData = getFieldValue(data, 'rooms.data')\r\n            if (!_.isEmpty(roomData)) {\r\n                dispatch({\r\n                    type: SET_ALL_ROOMS,\r\n                    payload: roomData\r\n                })\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n    }\r\n}\r\n\r\nexport const removeUsersRoom = () => dispatch => {\r\n    dispatch({\r\n        type: SET_USERS_ROOMS,\r\n        payload: []\r\n    })\r\n}\r\n\r\nexport const removeRooms = () => dispatch => {\r\n    dispatch({\r\n        type: SET_ALL_ROOMS,\r\n        payload: []\r\n    })\r\n}\r\n\r\nexport const updateRoom = ({id, name, userIds, type}) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const addRoomMutation = gql`\r\n            mutation addRoom($input: RoomInput){\r\n                addRoom(input: $input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    data{\r\n                        _id\r\n                        name\r\n                        userIds\r\n                    }\r\n                }\r\n            }`\r\n\r\n        const input = {\r\n            name,\r\n            userIds,\r\n            type\r\n        }\r\n        if (id) {\r\n            input[\"_id\"] = id\r\n        }\r\n        const {data} = await client.mutate({\r\n            mutation: addRoomMutation,\r\n            variables: {\r\n                input\r\n            }\r\n        })\r\n        handleAuthResponse(data.addRoom)\r\n        if (data.addRoom.data) {\r\n            dispatch({\r\n                type: UPDATE_USER_ROOMS,\r\n                payload: data.addRoom.data\r\n            })\r\n            dispatch({\r\n                type: SET_PRIVATE_ROOM,\r\n                payload: data.addRoom.data\r\n            })\r\n        }\r\n        if (type === \"direct\" && !data.addRoom.data) {\r\n            dispatch(showToastMessage(\"Wait till user approve your chat request\", 'error'))\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.addRoom\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteRoom = (id) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const removeRoomMutation = gql`\r\n            mutation removeRoom($input: RemoveRoomInput){\r\n                removeRoom(input: $input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    data{\r\n                        _id\r\n                    }\r\n                }\r\n            }`\r\n        const {data} = await client.mutate({\r\n            mutation: removeRoomMutation,\r\n            variables: {\r\n                input: {\r\n                    _id: id\r\n                }\r\n            }\r\n        })\r\n        handleAuthResponse(data.removeRoom)\r\n        dispatch({\r\n            type: DELETE_USER_ROOM,\r\n            payload: data.removeRoom.data\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.removeRoom\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentRoom = value => dispatch => {\r\n    dispatch({ \r\n        type: SET_CURRENT_ROOM,\r\n        value\r\n    })\r\n}\r\n\r\nexport const updateChatRooms = (room) => dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_ROOMS,\r\n            payload: room\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        \r\n    }\r\n}\r\n\r\n// rooms subscriptions\r\nexport const subsChatRooms = (handleChatRooms) => dispatch => {\r\n    try {\r\n        const chatRoomsSubscription = gql`\r\n        subscription{\r\n            chatRoomSubs {\r\n              _id\r\n              name\r\n              userIds\r\n              type\r\n              createdAt\r\n              default\r\n              profileBg\r\n              lastMessage {\r\n                message\r\n                createdAt\r\n              }\r\n              notifications{\r\n                  _id\r\n                  messageIds\r\n                  roomId\r\n                  userId\r\n              }\r\n              users {\r\n                  _id\r\n                  firstName\r\n                  lastName\r\n                  profilePicture\r\n              }\r\n              type\r\n              status\r\n            }\r\n          }\r\n        `\r\n        const observable = client.subscribe({query:  chatRoomsSubscription})\r\n        return observable.subscribe(({data}) => handleChatRooms(data.chatRoomSubs)) \r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\n// remove room notifications\r\n\r\nexport const removeRoomNotifications = (id) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const removeRoomNotificationsMutation = gql`\r\n            mutation removeRoomNotifications($input: RemoveRoomNotificationsInput){\r\n                removeRoomNotifications(input: $input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    data {\r\n                    _id\r\n                    }\r\n                }\r\n            }`\r\n        const {data} = await client.mutate({\r\n            mutation: removeRoomNotificationsMutation,\r\n            variables: {\r\n                input: {\r\n                    roomId: id\r\n                }\r\n            }\r\n        })\r\n        handleAuthResponse(data.removeRoomNotifications)\r\n        dispatch({\r\n            type: REMOVE_MESSAGE_NOTIFICATION,\r\n            payload: data.removeRoomNotifications.data\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.removeRoomNotifications.data\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}","import gql from 'graphql-tag'\r\nimport _ from 'underscore'\r\nimport client from '../../../graphql/client'\r\nimport { getFieldValue, handleAuthResponse } from '../../../utils'\r\nconst {SET_LOADER, SET_USER_DASHBOARD, SET_DASHBOARD_USER_ID, USER_ACTIVITIES} = require('../../types')\r\n\r\nexport const getDashboardDetails = (userId) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const DashboardQuery = gql`\r\n            query getDashboardDetails($id: String) {\r\n                getDashboardDetails(id: $id) {\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    data {\r\n                        totalChallenges\r\n                        wins\r\n                        loss\r\n                        lastMatches {\r\n                            challengerName\r\n                            winLoseScore\r\n                            opponentName\r\n                        }\r\n                        position\r\n                        totalPlayers \r\n                        points\r\n                    }\r\n                }\r\n            }\r\n        `\r\n        const {data} = await client.query({\r\n            query: DashboardQuery,\r\n            variables: {\r\n                id: userId\r\n            }\r\n        })\r\n        handleAuthResponse(data.getDashboardDetails)\r\n        const {success} = data.getDashboardDetails\r\n        if (success) {\r\n            const stats = getFieldValue(data, 'getDashboardDetails.data')\r\n            if (!_.isEmpty(stats)) {\r\n                dispatch({\r\n                    type: SET_USER_DASHBOARD,\r\n                    payload: stats\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: SET_USER_DASHBOARD,\r\n                    payload: []\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_USER_DASHBOARD,\r\n            payload: []\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserActivities = () => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const DashboardQuery = gql`\r\n            query getPaginatedUserActivities {\r\n                getPaginatedUserActivities {\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    data {\r\n                        totalPages\r\n                        skip\r\n                        limit\r\n                        data {\r\n                            userId\r\n                            activityType\r\n                            title\r\n                            message\r\n                            color\r\n                            createdAt\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `\r\n        const {data} = await client.query({\r\n            query: DashboardQuery\r\n        })\r\n        handleAuthResponse(data.getPaginatedUserActivities)\r\n        const {success} = data.getPaginatedUserActivities\r\n        if (success) {\r\n            const stats = getFieldValue(data, 'getPaginatedUserActivities.data.data')\r\n            if (!_.isEmpty(stats)) {\r\n                dispatch({\r\n                    type: USER_ACTIVITIES,\r\n                    payload: stats\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: USER_ACTIVITIES,\r\n                    payload: []\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: USER_ACTIVITIES,\r\n            payload: []\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const setDashboardUserId = value => dispatch => {\r\n    dispatch({ \r\n        type: SET_DASHBOARD_USER_ID,\r\n        payload: value\r\n    })\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Media } from 'reactstrap'\r\n\r\nimport Avatar from '@components/avatar'\r\nimport {getFullNameFromUser} from '@src/utils'\r\nimport { toggleChallengeModal, setAddEditPopupData } from \"@src/redux/actions/layout\"\r\nimport {CONSTANTS} from '@src/utils/CONSTANTS'\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nfunction OnlineUserRow({ user, index, canChallenge }) {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = () => {\r\n    if (canChallenge) {\r\n      dispatch(setAddEditPopupData(user))\r\n      dispatch(toggleChallengeModal(true))\r\n    }\r\n  }\r\n  \r\n    return (\r\n        <div key={`${user.userName}-${index}`} className='employee-task d-flex justify-content-between align-items-center'>\r\n          <Media className= \"w-100 cursor-pointer\">\r\n            {user.profileImage ? \r\n              <Avatar size='sm' imgClassName='rounded' className='mr-75' img={user.profileImage}  imgHeight='42' imgWidth='42' status='online' onClick={handleClick} />\r\n            :\r\n              <Avatar size='sm' color={user.profileBg} imgClassName='rounded' className='mr-75'  imgHeight='42' imgWidth='42' status='online' content={`${user.firstName} ${user.lastName}`} onClick={handleClick} initials />\r\n            }\r\n            <Media className='my-auto d-flex justify-content-between' body status='online'>\r\n              <h6 className='mb-0 cur' onClick={handleClick}>{getFullNameFromUser(user)}{user.rank ? ` - ${CONSTANTS.GAME_RANK.find(rank => rank.value === user.rank)?.label}` : \"\"}</h6>\r\n            </Media>\r\n          </Media>\r\n        </div>\r\n    )\r\n}\r\n\r\nOnlineUserRow.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nexport default OnlineUserRow\r\n\r\n","import React from \"react\"\r\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\"\r\nimport {\r\n  toggleChallengeModal,\r\n  setAddEditPopupData\r\n} from \"@src/redux/actions/layout\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Row from \"reactstrap/lib/Row\"\r\nimport Col from \"reactstrap/lib/Col\"\r\nimport {CONSTANTS} from '@src/utils/CONSTANTS'\r\nimport Avatar from '@components/avatar'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { setDashboardUserId } from '@src/redux/actions/dashboard'\r\n\r\n\r\nfunction privateChallengeModal() {\r\n  const history = useHistory()\r\n  const { toggleChallengePopup, addEditPopupData } = useSelector(\r\n    (state) => state.layout\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChallengeButton = () => {\r\n    dispatch(toggleChallengeModal(false))\r\n    history.push(\"/create-challenge\")\r\n  }\r\n\r\n  const navigateToUserDashboard = () => {\r\n    if (addEditPopupData?._id) {\r\n      dispatch(setDashboardUserId(addEditPopupData._id))\r\n      dispatch(toggleChallengeModal(false))\r\n      history.push(\"/dashboard\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"vertically-centered-modal\">\r\n      <Modal\r\n        isOpen={toggleChallengePopup}\r\n        toggle={() => dispatch(toggleChallengeModal(false))}\r\n        className=\"modal-dialog-centered modal-md\"\r\n      >\r\n        <ModalHeader toggle={() => dispatch(toggleChallengeModal(false))}>\r\n          <Row>\r\n            <Col>\r\n              <Avatar size='sm' imgClassName='rounded' className='mr-75' img={`${window.location.origin}/rank.png`}  imgHeight='42' imgWidth='42' />\r\n              {/* <img src={`${window.location.origin}/rank.png`}/> */}\r\n            </Col>\r\n            <Col>\r\n              <span>{addEditPopupData?.userName ? addEditPopupData.userName : \"User has not provided username yet\"}</span>\r\n            </Col>\r\n            {addEditPopupData?.rank ? (<><p>{CONSTANTS.GAME_RANK.find(rank => rank.value === addEditPopupData?.rank)?.label}</p></>) : \"\"}\r\n          </Row>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleChallengeButton}\r\n              >\r\n                Challenge\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"text-right\">\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={navigateToUserDashboard}\r\n              >\r\n                View\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default privateChallengeModal\r\n","\r\nimport { HelpCircle } from 'react-feather'\r\nimport { Card, CardHeader, CardTitle, CardBody, UncontrolledTooltip, FormGroup  } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport OnlineUserRow from './OnlineUserRow'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport {CONSTANTS} from '@src/utils/CONSTANTS'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors } from '@utils'\r\nimport PrivateChallengeModal from './ChallengeOnlineUserModal'\r\n\r\nconst OnlineUsers = ({ onlineUsers, scrollContainer, showheader }) => {\r\n  const [items, setItems] = useState([])\r\n  const [hasMore, setHasMore] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [selectedRank, setSelectedRank] = useState()\r\n  \r\n  useEffect(() => {\r\n    const LIMIT = 10\r\n    if (onlineUsers) {\r\n      if (onlineUsers.length < LIMIT) {\r\n        setItems(onlineUsers)\r\n      } else if (items.length) {\r\n        setItems(onlineUsers.slice(0, items.length))\r\n      } else {\r\n        setItems(onlineUsers.slice(0, LIMIT))\r\n        if (onlineUsers.length > LIMIT) setHasMore(true)\r\n      }\r\n    }\r\n    return () => {\r\n      setItems([])\r\n    }\r\n  }, [onlineUsers])\r\n\r\n  const loadItems = (prevArray = [], startCursor = 0) => {\r\n    let newArray = prevArray\r\n\r\n    if (onlineUsers.length >= (items.length + CONSTANTS.ARRAY_SIZE)) {\r\n      for (let i = startCursor; i < startCursor + CONSTANTS.ARRAY_SIZE; i++) {\r\n        const newItem = onlineUsers[i]\r\n        newArray = [...newArray, newItem]\r\n      }\r\n      setHasMore(true)\r\n    } else {\r\n      setHasMore(false)\r\n    }\r\n    return newArray\r\n  }\r\n  \r\n  const handleLoadMore = () => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      const newUserList = loadItems(items, items.length)\r\n      setLoading(false)\r\n      setItems(newUserList)\r\n    }, 1500)\r\n  }\r\n\r\n  const renderTasks = onlineUsers => {\r\n    if (selectedRank) {\r\n      onlineUsers = onlineUsers.filter(user => user.rank === selectedRank.value)\r\n    }\r\n  return onlineUsers.length > 0 ? onlineUsers.map((user, index) => {\r\n  return (user && <OnlineUserRow user = {user}\r\n    index = {index}\r\n    key = {\r\n      `${user.userName}-${index}`\r\n    }\r\n    canChallenge={true}\r\n    />\r\n  )\r\n  }) : null\r\n  }\r\n\r\n  return onlineUsers ? (\r\n    <Card className='card-employee-task'>\r\n      { showheader && <CardHeader>\r\n        <CardTitle tag='h4'> {hasMore} Online Users ({onlineUsers.length})</CardTitle>\r\n        <HelpCircle size={18} id=\"onlineUsersHelp\" className='text-muted cursor-pointer' />\r\n        <UncontrolledTooltip placement='auto' target='onlineUsersHelp'>\r\n          All online users \r\n        </UncontrolledTooltip>\r\n      </CardHeader> }\r\n      <CardBody className=\"pr-0\">\r\n        <FormGroup className=\"pr-2\">\r\n            <Select\r\n              theme={selectThemeColors}\r\n              isClearable={false}\r\n              id={`rank–type`}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              isClearable={true}\r\n              placeholder=\"Select WL Rank\"\r\n              options={CONSTANTS.GAME_RANK}\r\n              onChange={(value) => { setSelectedRank(value) } }\r\n            />\r\n          </FormGroup>\r\n      { onlineUsers && \r\n            <>\r\n                <PerfectScrollbar\r\n                  id=\"online-card-body\"\r\n                  className='online-card-body'\r\n                  options={{ wheelPropagation: false }}\r\n                >\r\n                  <InfiniteScroll\r\n                    dataLength={items.length}\r\n                    next={handleLoadMore}\r\n                    hasMore={hasMore}\r\n                    \r\n                    loader={<h4>Loading...</h4>}\r\n                    scrollableTarget=\"online-card-body\" >\r\n                    {renderTasks(items)}\r\n                  </InfiniteScroll>\r\n                </PerfectScrollbar>\r\n                <PrivateChallengeModal />\r\n            </>\r\n      }\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\n\r\nOnlineUsers.propTypes = {\r\n  onlineUsers: PropTypes.array.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  onlineUsers: state.auth.onlineUsers\r\n})\r\nexport default connect(mapStateToProps, {})(OnlineUsers)\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Bell, X, Check, AlertTriangle } from 'react-feather'\r\nimport {\r\n  Button,\r\n  Badge,\r\n  Media,\r\n  CustomInput,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { clearBellNotifications, getBellNotifications, subsReminders, updateReminders } from '../../../../redux/actions/reminders'\r\nimport { CONSTANTS } from '../../../../utils/CONSTANTS'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nlet reminderSubs\r\nconst NotificationDropdown = () => {\r\n  // ** Notification Array\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {bellNotifications} = useSelector(state => state.dashboard)\r\n  const [notifications, setNotifications] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(getBellNotifications())\r\n    if (reminderSubs?.subscription) {\r\n      reminderSubs.subscription.unsubscribe()\r\n    }\r\n    reminderSubs = dispatch(\r\n      subsReminders((reminder) => {\r\n        dispatch(updateReminders(reminder))\r\n      })\r\n    )\r\n    return () => {\r\n      if (reminderSubs?.subscription) {\r\n        reminderSubs.subscription.unsubscribe()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const handleClearNotification = (event) => {\r\n    const userId = localStorage.getItem(\"userId\")\r\n    dispatch(clearBellNotifications(userId, [CONSTANTS.REMINDER_TYPES.WL_SCORE_UPDATE, CONSTANTS.REMINDER_TYPES.CHALLENGE, CONSTANTS.REMINDER_TYPES.DISPUTE]))\r\n    location.reload()\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (bellNotifications?.length) {\r\n      const challengeNotifications = [], disputeNotifications = [], scoreUpdateNotifications = [], others = []\r\n      bellNotifications.forEach(noti => {\r\n        if (noti.type === CONSTANTS.REMINDER_TYPES.WL_SCORE_UPDATE) {\r\n          scoreUpdateNotifications.push(noti)\r\n        } else if (noti.type === CONSTANTS.REMINDER_TYPES.CHALLENGE) {\r\n          challengeNotifications.push(noti)\r\n        } else if (noti.type === CONSTANTS.REMINDER_TYPES.DISPUTE) {\r\n          disputeNotifications.push(noti)\r\n        } else {\r\n          others.push(noti)\r\n        }\r\n      })\r\n      setNotifications([...challengeNotifications, ...disputeNotifications, ...scoreUpdateNotifications, ...others])\r\n    }\r\n  }, [bellNotifications])\r\n\r\n  const handleNotificationClick = (event, data) => {\r\n    event.preventDefault()\r\n    const userId = localStorage.getItem(\"userId\")\r\n    if (userId) {\r\n      if (data?.type === CONSTANTS.REMINDER_TYPES.WL_SCORE_UPDATE) {\r\n        dispatch(clearBellNotifications(userId, [CONSTANTS.REMINDER_TYPES.WL_SCORE_UPDATE]))\r\n        history.push({\r\n          pathname: '/profile',\r\n          state: { section: '2' }\r\n        })\r\n      } else if (data?.type === CONSTANTS.REMINDER_TYPES.DISPUTE) {\r\n        dispatch(clearBellNotifications(userId, [CONSTANTS.REMINDER_TYPES.DISPUTE]))\r\n        history.push('/my-matches')\r\n      } else if (data?.type === CONSTANTS.REMINDER_TYPES.CHALLENGE) {\r\n        dispatch(clearBellNotifications(userId, [CONSTANTS.REMINDER_TYPES.CHALLENGE]))\r\n        history.push('/my-matches')\r\n      } else {\r\n        console.log(\"Other notification\")\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render Notifications\r\n  /*eslint-disable */\r\n  const renderNotificationItems = () => {\r\n    return (\r\n      <PerfectScrollbar\r\n        component='li'\r\n        className='media-list scrollable-container'\r\n        options={{\r\n          wheelPropagation: false\r\n        }}\r\n      >\r\n        {notifications?.length ? notifications.map((item, index) => {\r\n          item['avatarIcon'] = (\r\n            <AlertTriangle size={14} />\r\n          )\r\n          item['title'] = (\r\n            <Media tag='p' heading>\r\n              <span className='font-weight-bolder'>{item.title}</span>\r\n            </Media>\r\n          )\r\n          return (\r\n            <p key={index} className='d-flex' onClick={e => handleNotificationClick(e, item)}>\r\n              <Media\r\n                className={classnames('d-flex', {\r\n                  'align-items-start': !item.switch,\r\n                  'align-items-center': item.switch\r\n                })}\r\n              >\r\n                {!item.switch ? (\r\n                  <Fragment>\r\n                    <Media left>\r\n                      <Avatar\r\n                        {...(item.img\r\n                          ? { img: item.img, imgHeight: 32, imgWidth: 32 }\r\n                          : item.avatarContent\r\n                          ? {\r\n                              content: item.avatarContent,\r\n                              color: item.color\r\n                            }\r\n                          : item.avatarIcon\r\n                          ? {\r\n                              icon: item.avatarIcon,\r\n                              color: item.color\r\n                            }\r\n                          : null)}\r\n                      />\r\n                    </Media>\r\n                    <Media body>\r\n                      {item.title}\r\n                      <small className='notification-text'>{item.message}</small>\r\n                    </Media>\r\n                  </Fragment>\r\n                ) : (\r\n                  <Fragment>\r\n                    {item.title}\r\n                  </Fragment>\r\n                )}\r\n              </Media>\r\n            </p>\r\n          )\r\n        })\r\n        : (<div className='d-flex'>\r\n          <div className='d-flex align-items-center text-center ml-2'>\r\n            <span>\r\n              No new notifications\r\n            </span>\r\n          </div>\r\n        </div>)}\r\n      </PerfectScrollbar>\r\n    )\r\n  }\r\n  /*eslint-enable */\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-notification nav-item mr-25'>\r\n      <DropdownToggle tag='a' className='nav-link' href='/' onClick={e => e.preventDefault()}>\r\n        <Bell size={21} />\r\n        {notifications?.length ? (\r\n          <Badge pill color='danger' className='badge-up'>\r\n            {notifications?.length || 0}\r\n          </Badge>\r\n        ) : null}\r\n      </DropdownToggle>\r\n      {notifications?.length ? (\r\n        <DropdownMenu tag='ul' right className='dropdown-menu-media mt-0'>\r\n        <li className='dropdown-menu-header'>\r\n          <DropdownItem className='d-flex' tag='div' header>\r\n            <h4 className='notification-title mb-0 mr-auto'>Notifications</h4>\r\n            {/* <Badge tag='div' color='light-primary' pill>\r\n              6 New\r\n            </Badge> */}\r\n          </DropdownItem>\r\n        </li>\r\n        {renderNotificationItems()}\r\n        <li className='dropdown-menu-footer'>\r\n          <Button.Ripple color='primary' block onClick={handleClearNotification}>\r\n            Clear all notification\r\n          </Button.Ripple>\r\n        </li>\r\n      </DropdownMenu>\r\n      ) : null}\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default NotificationDropdown\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n  const navbarStore = store.navbar || {}\r\n  const contentWidth = store.layout.contentWidth\r\n\r\n  //** Vars\r\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [wrapperClass]: wrapperClass,\r\n        'show-overlay': navbarStore.query ? navbarStore.query.length : 0\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': !appLayout,\r\n          'content-area-wrapper': appLayout,\r\n          'container p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag\r\n          /*eslint-disable */\r\n          {...(layout === 'HorizontalLayout' && !appLayout\r\n            ? { className: classnames({ 'content-body': !appLayout }) }\r\n            : {})}\r\n          /*eslint-enable */\r\n        >\r\n          {children}\r\n        </Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutWrapper\r\n","import { lazy } from 'react'\r\n\r\nconst PagesRoutes = [\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/pages/authentication/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/register',\r\n    component: lazy(() => import('../../views/pages/authentication/Register')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/forgot-password',\r\n    component: lazy(() => import('../../views/pages/authentication/ForgotPassword')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/reset-password/:token',\r\n    component: lazy(() => import('../../views/pages/authentication/ResetPassword')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/coming-soon',\r\n    component: lazy(() => import('../../views/pages/misc/ComingSoon')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/not-authorized',\r\n    component: lazy(() => import('../../views/pages/misc/NotAuthorized')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/maintenance',\r\n    component: lazy(() => import('../../views/pages/misc/Maintenance')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/error',\r\n    component: lazy(() => import('../../views/pages/misc/Error')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/terms-of-use',\r\n    component: lazy(() => import('../../views/pages/misc/TermsOfUse')),\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/privacy-policy',\r\n    component: lazy(() => import('../../views/pages/misc/PrivacyPolicy')),\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/payment/success/:payId\",\r\n    component: lazy(() => import('../../views/pages/misc/PaymentSuccess')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/payment/error/:errorId\",\r\n    component: lazy(() => import('../../views/pages/misc/PaymentFailure')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  }\r\n]\r\n\r\nexport default PagesRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst DashboardRoutes = [\r\n  // Dashboards\r\n  {\r\n    path: '/',\r\n    component: lazy(() => import('../../views/Home')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    component: lazy(() => import('../../views/Dashboard')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/profile',\r\n    component: lazy(() => import('../../views/Profile')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/how-to-play',\r\n    component: lazy(() => import('../../views/HowToPlay')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/chat',\r\n    appLayout: true,\r\n    className: 'chat-application',\r\n    component: lazy(() => import('../../views/chat')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  // {\r\n  //   path: '/wallet',\r\n  //   component: lazy(() => import('../../views/wallet')),\r\n  //   meta: {\r\n  //     authRoute: true\r\n  //   },\r\n  //   exact: true\r\n  // },\r\n  {\r\n    path: '/create-challenge',\r\n    component: lazy(() => import('../../views/Challenge')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/my-matches',\r\n    component: lazy(() => import('../../views/MyMatches')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/chat-requests',\r\n    component: lazy(() => import('../../views/ChatRequests')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  }\r\n]\r\n\r\nexport default DashboardRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst AdminRoutes = [\r\n  // Admin Routes\r\n  {\r\n    path: '/layout-settings',\r\n    component: lazy(() => import('../../views/LayoutSettings')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/layout-settings/:id',\r\n    component: lazy(() => import('../../views/LayoutSettings/LayoutUpdate')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/create-console',\r\n    component: lazy(() => import('../../views/ConsoleList')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/create-games',\r\n    component: lazy(() => import('../../views/Games')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/resolve-dispute',\r\n    component: lazy(() => import('../../views/ResolveDispute')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/rooms',\r\n    component: lazy(() => import('../../views/Room')),\r\n    meta: {\r\n      authRoute: true\r\n    },\r\n    exact: true\r\n  }\r\n]\r\n\r\nexport default AdminRoutes\r\n","// ** Routes Imports\r\nimport PagesRoutes from './Pages'\r\nimport DashboardRoutes from './DashboardRoutes'\r\nimport AdminRoutes from './AdminRoutes'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - EFOOT-NL Dashboard'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/dashboard'\r\n// ** Merge Routes\r\nconst Routes = [...DashboardRoutes, ...PagesRoutes, ...AdminRoutes]\r\nexport { DefaultRoute, Routes, TemplateTitle }\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.error(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.error(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.error(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\n\r\n// ** Third Party Components\r\nimport ReactCountryFlag from 'react-country-flag'\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\n// ** Internationalization Context\r\nimport { IntlContext } from '@src/utility/context/Internationalization'\r\n\r\nconst IntlDropdown = () => {\r\n  // ** Context\r\n  const intlContext = useContext(IntlContext)\r\n\r\n  // ** Vars\r\n  const langObj = {\r\n    en: 'English',\r\n    nl: 'Dutch'\r\n  }\r\n\r\n  // ** Function to switch Language\r\n  const handleLangUpdate = (e, lang) => {\r\n    e.preventDefault()\r\n    intlContext.switchLanguage(lang)\r\n  }\r\n\r\n  return (\r\n    <UncontrolledDropdown href='/' tag='li' className='dropdown-language nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link' onClick={e => e.preventDefault()}>\r\n        <ReactCountryFlag\r\n          className='country-flag flag-icon'\r\n          countryCode={intlContext.locale === 'en' ? 'us' : intlContext.locale}\r\n          svg\r\n        />\r\n        <span className='selected-language'>{langObj[intlContext.locale]}</span>\r\n      </DropdownToggle>\r\n      <DropdownMenu className='mt-0' right>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'en')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='us' svg />\r\n          <span className='ml-1'>English</span>\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'nl')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='nl' svg />\r\n          <span className='ml-1'>Dutch</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default IntlDropdown\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'underscore'\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem, Button } from 'reactstrap'\r\nimport { Inbox, Power, User } from 'react-feather'\r\nimport { isUserLoggedIn } from '@src/utils'\r\nimport { showToastMessage } from '../../../../redux/actions/toastNotification'\r\nimport {getUserDetails, logoutUser} from '../../../../redux/actions/auth'\r\n\r\nconst UserDropdown = (props) => {\r\n\r\n  // ** State\r\n  // const [userData, setUserData] = useState(null)\r\n  const [isLoggedInUser, setUserLoggedIn] = useState(false)\r\n  const {showToastMessage, getUserDetails, user, logoutUser} = props\r\n  const history = useHistory()\r\n  useEffect(async () => {\r\n    // const userData = localStorage.getItem('userData')\r\n    if (isUserLoggedIn() !== null) {\r\n      setUserLoggedIn(true)\r\n      await getUserDetails()\r\n    }\r\n  }, [])\r\n\r\n  const handleLogout = async (event) => {\r\n    event.preventDefault()\r\n    const result = await logoutUser()\r\n    if (result.success) {\r\n      showToastMessage(\"See you soon\", 'success')\r\n      history.push('/login')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      {isLoggedInUser && !_.isEmpty(user) ? <>\r\n          <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\r\n            <div className='user-nav d-sm-flex d-none'>\r\n              <span className='user-name font-weight-bold capitalize w-100'>{!_.isEmpty(user) ? `${user.firstName} ${user.lastName}` : \"John Doe\"}</span>\r\n              <span className='user-status capitalize'>{(!_.isEmpty(user) && user.roles.join(\", \")) || 'User'}</span>\r\n            </div>\r\n            {user.profileImage ? \r\n              <Avatar size='sm' img={user.profileImage}  imgHeight='40' imgWidth='40' status='online'> `${user.firstName.charAt(0)} ${user.lastName.charAt(0)}` </Avatar>\r\n            :\r\n              <Avatar size='sm' color={user.profileBg}  imgHeight='40' imgWidth='40' status='online' content={`${user.firstName} ${user.lastName}`} initials />\r\n            }\r\n          </DropdownToggle>\r\n          <DropdownMenu right>\r\n            <DropdownItem tag={Link} to='/dashboard'>\r\n              <Inbox size={14} className='mr-75' />\r\n              <span className='align-middle'>Dashbard</span>\r\n            </DropdownItem>\r\n            <DropdownItem tag={Link} to='/profile'>\r\n              <User size={14} className='mr-75' />\r\n              <span className='align-middle'>Profile</span>\r\n            </DropdownItem>\r\n            <DropdownItem tag={Link} to=\"#\" onClick={e => handleLogout(e)}>\r\n              <Power size={14} className='mr-75' />\r\n              <span className='align-middle'>Logout</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </>\r\n      : <div>\r\n          <Button color='gradient-primary' tag={Link} to='/login' block>\r\n            Login\r\n          </Button>\r\n        </div>}\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nUserDropdown.propTypes = {\r\n  showToastMessage: PropTypes.func.isRequired,\r\n  getUserDetails: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {showToastMessage, getUserDetails, logoutUser})(UserDropdown)\r\n","import gql from 'graphql-tag'\r\nimport _ from 'underscore'\r\nimport client from '../../../graphql/client'\r\nimport { getFieldValue, handleAuthResponse } from '../../../utils'\r\nconst {SET_LOADER, BELL_NOTIFICATIONS, UPDATE_BELL_NOTIFICATIONS} = require('../../types')\r\n\r\nexport const getBellNotifications = () => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const bellNotificationQuery = gql`\r\n           query getBellNotification{\r\n                getBellNotification{\r\n                    statusCode\r\n                    success\r\n                    nextToken\r\n                    data {\r\n                    _id\r\n                    userId\r\n                    title\r\n                    message\r\n                    color\r\n                    createdAt\r\n                    type\r\n                    }\r\n                }\r\n            }\r\n        `\r\n        const {data} = await client.query({\r\n            query: bellNotificationQuery\r\n        })\r\n        handleAuthResponse(data.getBellNotification)\r\n        const {success} = data.getBellNotification\r\n        if (success) {\r\n            const notifications = getFieldValue(data, 'getBellNotification.data')\r\n            if (!_.isEmpty(notifications)) {\r\n                dispatch({\r\n                    type: BELL_NOTIFICATIONS,\r\n                    payload: notifications\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: BELL_NOTIFICATIONS,\r\n                    payload: []\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: BELL_NOTIFICATIONS,\r\n            payload: []\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearBellNotifications = (userId, types) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const clearBellNotification = gql`\r\n        mutation clearUserBellNotification($input: clearUserBellNotificationInput) {\r\n            clearUserBellNotification(input: $input) {\r\n              statusCode\r\n              success\r\n              message\r\n              data\r\n            }\r\n          }\r\n          `\r\n        const { data } = await client.mutate({\r\n            mutation: clearBellNotification,\r\n            variables: {\r\n                input: {\r\n                    userId,\r\n                    types\r\n                }\r\n            }\r\n        })\r\n        handleAuthResponse(data.clearUserBellNotification)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        if (data.clearUserBellNotification.success) {     \r\n            dispatch({\r\n                type: BELL_NOTIFICATIONS,\r\n                payload: []\r\n            })\r\n        } else {\r\n            dispatch(showToastMessage(data.clearUserBellNotification.message, 'error'))\r\n        }\r\n        return []\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const subsReminders = (handleChallenges) => dispatch => {\r\n    try {\r\n        const ReminderSubscription = gql`\r\n        subscription{\r\n            reminderSubs {\r\n                _id\r\n                userId\r\n                title\r\n                message\r\n                color\r\n                type\r\n                createdAt\r\n              }\r\n          }\r\n        `\r\n        const observable = client.subscribe({query:  ReminderSubscription})\r\n        return observable.subscribe(({data}) => { \r\n            handleChallenges(data.reminderSubs)\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateReminders = (reminder) => dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_BELL_NOTIFICATIONS,\r\n            payload: reminder\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n    }\r\n}","// ** Dropdowns Imports\r\nimport IntlDropdown from './IntlDropdown'\r\nimport UserDropdown from './UserDropdown'\r\nimport NotificationDropdown from './NotificationDropdown'\r\n\r\n// ** Third Party Components\r\nimport { Sun, Moon, Star } from 'react-feather'\r\nimport { FaUserSlash, FaUser } from \"react-icons/fa\"\r\nimport { NavItem, NavLink, Badge } from 'reactstrap'\r\nimport { useEffect, useState } from 'react'\r\nimport { CONSTANTS } from '../../../../utils/CONSTANTS'\r\nimport _ from 'underscore'\r\n\r\nconst NavbarUser = props => {\r\n  // ** Props\r\n  const { skin, setSkin, showOnlineUserPopup, handleOnlineUserHidden, location, rank } = props\r\n  const [showOnlinetoggler, setOnlineUserToggler] = useState(true)\r\n  useEffect(() => {\r\n    if (!_.isEmpty(location)) {\r\n      let payload =  CONSTANTS.ROUTES_HIDE_ONLINE_POPUP.findIndex(li => {\r\n        return li === location.pathname\r\n      })\r\n      payload = !(payload > -1)\r\n      setOnlineUserToggler(payload)\r\n    }\r\n    return () => {\r\n      setOnlineUserToggler(false)\r\n    }\r\n  }, [location])\r\n\r\n  // ** Function to toggle Theme (Light/Dark)\r\n  const ThemeToggler = () => {\r\n    if (skin === 'dark') {\r\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n    } else {\r\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n    }\r\n  }\r\n\r\n  const OnlineUsersToggler = () => {\r\n    if (showOnlineUserPopup) {\r\n      return <FaUserSlash className='ficon' onClick={() => handleOnlineUserHidden(false)} />\r\n    } else {\r\n      return <FaUser className='ficon' onClick={() => handleOnlineUserHidden(true)} />\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul className='nav navbar-nav align-items-center ml-auto'>\r\n      <NavItem>\r\n        <NavLink className='nav-link-style'>\r\n          {rank && (\r\n            <Badge  color='light-primary' className=\"p-1\">\r\n              <span className='text-uppercase'>{rank}</span>\r\n            </Badge>\r\n          )}\r\n        </NavLink>\r\n      </NavItem>\r\n      <NotificationDropdown />\r\n      <IntlDropdown />\r\n      <NavItem className='d-none d-sm-block d-lg-block'>\r\n        <NavLink className='nav-link-style'>\r\n          <ThemeToggler />\r\n        </NavLink>\r\n      </NavItem>\r\n      {showOnlinetoggler && <NavItem>\r\n        <NavLink className='nav-link-style'>\r\n          <OnlineUsersToggler />\r\n        </NavLink>\r\n      </NavItem>}\r\n      <UserDropdown />\r\n    </ul>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\nimport {\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap'\r\nimport * as Icon from 'react-feather'\r\nimport { CONSTANTS } from '../../../../utils/CONSTANTS'\r\n\r\n\r\nconst ThemeNavbar = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility, showOnlineUserPopup, handleOnlineUserHidden, location } = props\r\n  let rank = \"\"\r\n  if (Object.keys(JSON.parse(localStorage.getItem('userData')) || {}).length) {\r\n    rank = JSON.parse(localStorage.getItem('userData')).rank\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <div className='bookmark-wrapper d-flex align-items-center'>\r\n        <NavbarBookmarks setMenuVisibility={setMenuVisibility} />\r\n      </div> */}\r\n      <ul className='navbar-nav d-xl-none'>\r\n        <NavItem className='mobile-menu mr-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Icon.Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      {/* <Menus showUserComp={false} /> */}\r\n      <NavbarUser skin={skin} setSkin={setSkin} rank={rank} showOnlineUserPopup={showOnlineUserPopup} handleOnlineUserHidden={handleOnlineUserHidden} location={location} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink } from 'reactstrap'\r\nimport UserDropdown from '../navbar/UserDropdown'\r\nimport IntlDropdown from '../navbar/IntlDropdown'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { Moon, Sun } from 'react-feather'\r\n\r\nfunction Menus(props) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const toggle = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n    const {showUserComp, skin, setSkin} = props\r\n    const ThemeToggler = () => {\r\n        if (skin === 'dark') {\r\n          return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n        } else {\r\n          return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n        }\r\n      }\r\n    return (\r\n        <div className=\"menu\">\r\n            <Navbar light expand=\"md\">\r\n                <div className=\"nav-bar-toggle-div\">\r\n                    <NavbarToggler onClick={toggle} />\r\n                </div>\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"ml-auto align-center\" navbar>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" href=\"/\"><FormattedMessage id={\"Home\"} /></NavLink>\r\n                    </NavItem>\r\n                    {showUserComp && \r\n                        <>\r\n                            <IntlDropdown />\r\n                            <NavItem className='d-none d-lg-block'>\r\n                                <NavLink className='nav-link-style'>\r\n                                <ThemeToggler />\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <UserDropdown />\r\n                        </>\r\n                    }\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nMenus.propTypes = {\r\n\r\n}\r\n\r\nexport default Menus\r\n\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport themeConfig from '@configs/themeConfig'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Custom Hooks\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\nimport NavbarComponent from './components/navbar'\r\n\r\nimport Menus from './components/Menus'\r\n\r\nconst BlankLayout = ({ children, ...rest }) => {\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const layoutStore = useSelector(state => state.layout)\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n  return (\r\n    <div className='blank-page'>\r\n        <div className={classnames(\r\n            `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n              footerClasses[footerType] || 'footer-static'\r\n            }`,\r\n            {\r\n              // Modern Menu\r\n              'vertical-menu-modern': windowWidth >= 1200,\r\n              'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n              'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n    \r\n              // Overlay Menu\r\n              'vertical-overlay-menu': windowWidth < 1200,\r\n              'menu-hide': !menuVisibility && windowWidth < 1200,\r\n              'menu-open': menuVisibility && windowWidth < 1200\r\n            }\r\n          )}  {...(isHidden ? { 'data-col': '1-column' } : {})}>\r\n          \r\n          <div className=\"blank-page-header\">\r\n            {/* <div className=\"blank-header-nav flex30\">\r\n              <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n                <img src={themeConfig.app.smallLogoImage} alt='logo' />\r\n                <h2 className='brand-text text-primary ml-1'>E-FOOT.NL</h2>\r\n              </Link>\r\n            </div> */}\r\n            {/* <div className='flex70'> */}\r\n              <Navbar\r\n                 expand='lg'\r\n                 light={skin !== 'dark'}\r\n                 dark={skin === 'dark' || bgColorCondition}\r\n                 color={bgColorCondition ? navbarColor : undefined}\r\n                 className={classnames(\r\n                   `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n                 )}\r\n              >\r\n                <div className=\"navbar-container d-flex justify-content-between\">\r\n                  <div className=\"blank-header-nav\">\r\n                    <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n                      <img src={themeConfig.app.smallLogoImage} alt='logo' />\r\n                      <h2 className='brand-text text-primary ml-1'>E-FOOT.NL</h2>\r\n                    </Link>\r\n                  </div>\r\n                  <Menus showUserComp={true} setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\r\n                </div>\r\n              </Navbar>\r\n            {/* </div> */}\r\n          </div>\r\n          {children}\r\n          \r\n          {/* Scroll to top for the pages */}\r\n          {themeConfig.layout.scrollTop === true ? (\r\n            <div className='scroll-to-top'>\r\n              <ScrollToTop showUnder={300}  style={{ bottom: '5%', zIndex: 10000 }}>\r\n                <Button className='btn-icon' color='primary'>\r\n                  <ArrowUp size={14} />\r\n                </Button>\r\n              </ScrollToTop>\r\n            </div>\r\n          ) : null}\r\n        </div>  \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { Settings, X } from 'react-feather'\r\nimport { CustomInput, FormGroup } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Customizer = props => {\r\n  // ** Props\r\n  const {\r\n    skin,\r\n    setSkin,\r\n    isRtl,\r\n    setIsRtl,\r\n    layout,\r\n    setLayout,\r\n    navbarType,\r\n    setNavbarType,\r\n    footerType,\r\n    setFooterType,\r\n    navbarColor,\r\n    setNavbarColor,\r\n    isHidden,\r\n    setIsHidden,\r\n    contentWidth,\r\n    setContentWidth,\r\n    menuCollapsed,\r\n    setMenuCollapsed,\r\n    transition,\r\n    setTransition\r\n  } = props\r\n\r\n  // ** State\r\n  const [openCustomizer, setOpenCustomizer] = useState(false)\r\n\r\n  // ** Toggles Customizer\r\n  const handleToggle = e => {\r\n    e.preventDefault()\r\n    setOpenCustomizer(!openCustomizer)\r\n  }\r\n\r\n  // ** Render Layout Skin Options\r\n  const renderSkinsRadio = () => {\r\n    const skinsArr = [\r\n      {\r\n        name: 'light',\r\n        label: 'Light',\r\n        checked: skin === 'light'\r\n      },\r\n      {\r\n        name: 'bordered',\r\n        label: 'Bordered',\r\n        checked: skin === 'bordered'\r\n      },\r\n      {\r\n        name: 'dark',\r\n        label: 'Dark',\r\n        checked: skin === 'dark'\r\n      },\r\n      {\r\n        name: 'semi-dark',\r\n        label: 'Semi Dark',\r\n        checked: skin === 'semi-dark'\r\n      }\r\n    ]\r\n\r\n    return skinsArr.map((radio, index) => {\r\n      const marginCondition = index !== skinsArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={radio.name}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setSkin(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Navbar Colors Options\r\n  const renderNavbarColors = () => {\r\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\r\n\r\n    return colorsArr.map(color => (\r\n      <li\r\n        key={color}\r\n        className={classnames(`color-box bg-${color}`, {\r\n          selected: navbarColor === color,\r\n          border: color === 'white'\r\n        })}\r\n        onClick={() => setNavbarColor(color)}\r\n      ></li>\r\n    ))\r\n  }\r\n\r\n  // ** Render Navbar Type Options\r\n  const renderNavbarTypeRadio = () => {\r\n    const navbarTypeArr = [\r\n      {\r\n        name: 'floating',\r\n        label: 'Floating',\r\n        checked: navbarType === 'floating'\r\n      },\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: navbarType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: navbarType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: navbarType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return navbarTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== navbarTypeArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={radio.name}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setNavbarType(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Footer Type Options\r\n  const renderFooterTypeRadio = () => {\r\n    const footerTypeArr = [\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: footerType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: footerType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: footerType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return footerTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== footerTypeArr.length - 1\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={`footer-${radio.name}`}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setFooterType(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // **  Router Transition Options\r\n  const transitionOptions = [\r\n    { value: 'fadeIn', label: 'Fade' },\r\n    { value: 'fadeInLeft', label: 'Fade In Left' },\r\n    { value: 'zoomIn', label: 'Zoom In' },\r\n    { value: 'none', label: 'None' }\r\n  ]\r\n\r\n  // ** Get Current Transition\r\n  const transitionValue = transitionOptions.find(i => i.value === transition)\r\n\r\n  return (\r\n    <div\r\n      className={classnames('customizer d-none d-md-block', {\r\n        open: openCustomizer\r\n      })}\r\n    >\r\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\r\n        <Settings size={14} className='spinner' />\r\n      </a>\r\n      <PerfectScrollbar className='customizer-content'>\r\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\r\n          <h4 className='mb-0'>Theme Customizer</h4>\r\n          <p className='m-0'>Customize & Preview in Real Time</p>\r\n          <a href='/' className='customizer-close' onClick={handleToggle}>\r\n            <X />\r\n          </a>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Skin</p>\r\n            <div className='d-flex'>{renderSkinsRadio()}</div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Content Width</p>\r\n            <div className='d-flex'>\r\n              <CustomInput\r\n                type='radio'\r\n                id='full-width'\r\n                className='mr-1'\r\n                label='Full Width'\r\n                checked={contentWidth === 'full'}\r\n                onChange={() => setContentWidth('full')}\r\n              />\r\n              <CustomInput\r\n                type='radio'\r\n                id='boxes'\r\n                label='Boxed'\r\n                checked={contentWidth === 'boxed'}\r\n                onChange={() => setContentWidth('boxed')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex'>\r\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\r\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n              <p className='font-weight-bold mb-0'>Router Transition</p>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                defaultValue={transitionOptions[0]}\r\n                value={transitionValue}\r\n                options={transitionOptions}\r\n                isClearable={false}\r\n                onChange={({ value }) => setTransition(value)}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <p className='font-weight-bold'>Menu Layout</p>\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <CustomInput\r\n                type='radio'\r\n                id='vertical-layout'\r\n                label='Vertical'\r\n                checked={layout === 'VerticalLayout'}\r\n                onChange={() => setLayout('vertical')}\r\n                className='mr-1'\r\n              />\r\n              <CustomInput\r\n                type='radio'\r\n                id='horizontal-layout'\r\n                label='Horizontal'\r\n                checked={layout === 'HorizontalLayout'}\r\n                onChange={() => setLayout('horizontal')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <FormGroup className='mb-2'>\r\n              <div className='d-flex align-items-center'>\r\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\r\n                <CustomInput\r\n                  type='switch'\r\n                  id='menu-collapsed'\r\n                  name='menu-collapsed'\r\n                  checked={menuCollapsed}\r\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\r\n                />\r\n              </div>\r\n            </FormGroup>\r\n          ) : null}\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\r\n              <CustomInput\r\n                type='switch'\r\n                id='menu-hidden'\r\n                name='menu-hidden'\r\n                checked={isHidden}\r\n                onChange={() => setIsHidden(!isHidden)}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <FormGroup className='mb-2'>\r\n              <p className='font-weight-bold'>Navbar Color</p>\r\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\r\n            </FormGroup>\r\n          ) : null}\r\n\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\r\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Footer Type</p>\r\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\r\n          </FormGroup>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customizer\r\n","// ** Icons Import\r\nimport { Heart, Facebook, Instagram, Mail, Youtube} from 'react-feather'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// import { Link } from 'react-router-dom'\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-left d-block d-md-inline-block mt-25 right-content'>\r\n        <a href=\"https://www.facebook.com/efoot.nl/\" target=\"_blank\">\r\n          <Facebook className=\"left-icon\" size={14} />\r\n        </a>\r\n        <a href=\"https://www.instagram.com/fifa_toernooi.nl/\" target=\"_blank\">\r\n          <Instagram className=\"left-icon\" size={14} />\r\n        </a>\r\n        <a href=\"https://www.youtube.com/channel/UCbjU3jneYH219L76ePLTYzA?view_as=subscriber/\" target=\"_blank\">\r\n          <Youtube className=\"left-icon\" size={14} />\r\n        </a>\r\n        <a href=\"http://info@fifa-toernooi.nl\" target=\"_blank\">\r\n          <Mail className=\"left-icon\" size={14} />\r\n        </a>\r\n        <span className=\"float-right\">\r\n          <a href=\"/terms-of-use\">\r\n            <FormattedMessage id={\"Terms Of Use\"} />\r\n          </a>{\" \"} - {\" \"}\r\n          <a href='/privacy-policy'>\r\n            <FormattedMessage id={\"Privacy Policy\"} />\r\n            \r\n          </a>\r\n        </span>\r\n      </span>\r\n      <span className='float-md-right left-content'>\r\n        Made with \r\n        <Heart size={14} /> {' '}\r\n        Adept Infotech\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { CreditCard, Crosshair, Inbox, LifeBuoy, List, Mail, Radio, Server, Shield, Trello, User, UserPlus, Users } from 'react-feather'\r\nimport { AiOutlineHome } from \"react-icons/ai\"\r\nimport { RiChatSmile3Line } from \"react-icons/ri\"\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <AiOutlineHome />,\r\n    navLink: '/'\r\n  },\r\n  {\r\n    id: 'dashboard',\r\n    title: 'Dashboard',\r\n    icon: <Inbox />,\r\n    navLink: '/dashboard'\r\n  },\r\n  {\r\n    id: 'chat',\r\n    title: 'Chats',\r\n    icon: <RiChatSmile3Line />,\r\n    navLink: '/chat'\r\n  },\r\n  {\r\n    id: 'chatRequests',\r\n    title: 'Chat Requests',\r\n    icon: <Trello />,\r\n    navLink: '/chat-requests'\r\n  },\r\n  {\r\n    id: 'myMatch',\r\n    title: 'My Matches',\r\n    icon: <Trello />,\r\n    navLink: '/my-matches'\r\n  },\r\n  {\r\n    id: 'findMyMatch',\r\n    title: \"Start Game\",\r\n    icon: <Radio />,\r\n    // navLink: '/find-my-match'\r\n    navLink: '/create-challenge'\r\n\r\n  },\r\n  // {\r\n  //   id: 'wallet',\r\n  //   title: 'Wallet',\r\n  //   icon: <CreditCard />,\r\n  //   navLink: '/wallet'\r\n  //   // navLink: '/#'\r\n  // },\r\n  {\r\n    id: 'profile',\r\n    title: 'My Profile',\r\n    icon: <User />,\r\n    navLink: '/profile'\r\n  },\r\n  {\r\n    id: 'tournament',\r\n    title: 'Tournaments',\r\n    icon: <Crosshair />,\r\n    // navLink: '/contact-us'\r\n    navLink: '/#'\r\n  },\r\n  {\r\n    id: 'contact',\r\n    title: 'Contact Us',\r\n    icon: <Mail />,\r\n    // navLink: '/contact-us'\r\n    navLink: '/#'\r\n  },\r\n  {\r\n    id: 'howToPlay',\r\n    title: 'How To Play',\r\n    icon: <Server />,\r\n    navLink: '/how-to-play'\r\n    // navLink: '/#'\r\n  }\r\n]\r\n","import { SiGoogleclassroom } from \"react-icons/si\"\r\nimport {GiGameConsole} from 'react-icons/gi'\r\nimport {GrGamepad} from 'react-icons/gr'\r\nimport {BsLayoutWtf} from 'react-icons/bs'\r\nimport {BiFirstAid} from 'react-icons/bi'\r\n\r\nexport default [\r\n    {\r\n      header: 'Admin Routes'\r\n    },\r\n    {\r\n      id: 'layoutSettings',\r\n      title: 'Layout Settings',\r\n      icon: <BsLayoutWtf />,\r\n      navLink: \"/layout-settings\"\r\n    },\r\n    {\r\n        id: 'rooms',\r\n        title: 'Rooms',\r\n        icon: <SiGoogleclassroom />,\r\n        navLink: '/rooms'\r\n    },\r\n    {\r\n      id: 'createConsole',\r\n      title: 'Create Console',\r\n      icon: <GiGameConsole />,\r\n      navLink: '/create-console'\r\n    },\r\n    {\r\n      id: 'createGames',\r\n      title: 'Create Games',\r\n      icon: <GrGamepad />,\r\n      navLink: '/create-games'\r\n    },\r\n    {\r\n      id: 'resolveDispute',\r\n      title: 'Resolve Dispute',\r\n      icon: <BiFirstAid />,\r\n      navLink: '/resolve-dispute'\r\n    }\r\n]  ","// ** Navigation sections imports\r\nimport dashboards from './dashboards'\r\nimport adminRoutes from './adminRoutes'\r\n\r\nconst normalRoutes = [...dashboards]\r\nconst adminRoleRoutes = [...adminRoutes]\r\nexport default {normalRoutes, adminRoleRoutes}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item mr-auto'>\r\n          <NavLink to='/' className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\n// export const isNavLinkActive = (link, currentURL, match) => {\r\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\r\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\r\n//   return (\r\n//     currentURL === link ||\r\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\r\n//   )\r\n// }\r\n\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if nav group is\r\n * @param {Array} children Group children\r\n */\r\n// export const isNavGroupActive = (children, currentURL, match) => {\r\n//   return children.some(child => {\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children) {\r\n//       return isNavGroupActive(child.children, currentURL, match)\r\n//     }\r\n//     // else it's link => Check for matched Route\r\n//     return isNavLinkActive(child.navLink, currentURL, match)\r\n//   })\r\n// }\r\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\r\n  return children.some(child => {\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children) {\r\n      return isNavGroupActive(child.children, currentURL, routerProps)\r\n    }\r\n    // else it's link => Check for matched Route\r\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\r\n  })\r\n}\r\n\r\n/**\r\n * Search for parent object\r\n * @param {Array} navigation Group children\r\n * @param {string} currentURL current URL\r\n */\r\n// export const search = (navigation, currentURL, match) => {\r\n//   let result\r\n//   navigation.some(child => {\r\n//     let children\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children && (children = search(child.children, currentURL, match))) {\r\n//       return (result = {\r\n//         id: child.id,\r\n//         children\r\n//       })\r\n//     }\r\n\r\n//     // else it's link => Check for matched Route\r\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\r\n//       return (result = {\r\n//         id: child.id\r\n//       })\r\n//     }\r\n//   })\r\n//   return result\r\n// }\r\n\r\nexport const search = (navigation, currentURL, routerProps) => {\r\n  let result\r\n  navigation.some(child => {\r\n    let children\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\r\n      return (result = {\r\n        id: child.id,\r\n        children\r\n      })\r\n    }\r\n\r\n    // else it's link => Check for matched Route\r\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\r\n      return (result = {\r\n        id: child.id\r\n      })\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * Loop through nested object\r\n * @param {object} obj nested object\r\n */\r\nexport const getAllParents = (obj, match) => {\r\n  const res = []\r\n  const recurse = (obj, current) => {\r\n    for (const key in obj) {\r\n      const value = obj[key]\r\n      if (value !== undefined) {\r\n        if (value && typeof value === 'object') {\r\n          recurse(value, key)\r\n        } else {\r\n          if (key === match) {\r\n            res.push(value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  recurse(obj)\r\n  return res\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Vertical Menu Array Of Items\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\nimport { isUserAdminFromUser } from '../../../../../utils'\r\nimport _ from 'underscore'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CONSTANTS } from '../../../../../utils/CONSTANTS'\r\nimport { clearBellNotifications } from '../../../../../redux/actions/reminders'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  toggleActiveGroup,\r\n  parentItem,\r\n  routerProps,\r\n  currentActiveItem, \r\n  user\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n  const dispatch = useDispatch()\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  const {bellNotifications} = useSelector(state => state.dashboard)\r\n  const [notifications, setNotifications] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (bellNotifications?.length) {\r\n      setNotifications(bellNotifications.filter(noti => [CONSTANTS.REMINDER_TYPES.CHALLENGE, CONSTANTS.REMINDER_TYPES.DISPUTE].includes(noti.type)))\r\n    }\r\n    return () => {\r\n    }\r\n  }, [bellNotifications])\r\n\r\n\r\n  let sideBarMenus = [...navigation.normalRoutes]\r\n  if (!_.isEmpty(user) && isUserAdminFromUser(user)) {\r\n      sideBarMenus = [...sideBarMenus, navigation.adminRoleRoutes]\r\n  }\r\n\r\n  // ** To match path\r\n  const match = matchPath(currentURL, {\r\n    path: `${item.navLink}/:param`,\r\n    exact: true,\r\n    strict: false\r\n  })\r\n\r\n  // ** Search for current item parents\r\n  const searchParents = (sideBarMenus, currentURL) => {\r\n    const parents = search(sideBarMenus, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    return allParents\r\n  }\r\n\r\n  // ** URL Vars\r\n  const resetActiveGroup = navLink => {\r\n    const parents = search(sideBarMenus, navLink, match)\r\n    toggleActiveGroup(item.id, parents)\r\n  }\r\n\r\n  // ** Reset Active & Open Group Arrays\r\n  const resetActiveAndOpenGroups = () => {\r\n    setGroupActive([])\r\n    setGroupOpen([])\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(sideBarMenus, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n        onClick={e => {\r\n          if (notifications?.length && item.title === \"My Matches\") {\r\n            const userId = localStorage.getItem(\"userId\")\r\n            dispatch(clearBellNotifications(userId, [CONSTANTS.REMINDER_TYPES.CHALLENGE]))\r\n          }\r\n          if (!item.navLink.length) {\r\n            e.preventDefault()\r\n          }\r\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n\r\n        {(notifications?.length && item.title === \"My Matches\") ? (\r\n        <Badge className='ml-auto mr-1' color=\"danger\" pill>\r\n          {notifications?.length}\r\n        </Badge>) : null}\r\n        \r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Collapse, Badge } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  parentItem,\r\n  menuCollapsed,\r\n  menuHover,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggles Open Group\r\n  const toggleOpenGroup = (item, parentItem) => {\r\n    let openArr = groupOpen\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      allParents.pop()\r\n    }\r\n\r\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\r\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\r\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\r\n    } else {\r\n      openArr = []\r\n      if (!groupOpen.includes(item)) {\r\n        openArr.push(item)\r\n      }\r\n    }\r\n\r\n    // ** Set Open Group\r\n    setGroupOpen([...openArr])\r\n  }\r\n\r\n  // ** Toggle Active Group\r\n  const toggleActiveGroup = (item, parentItem) => {\r\n    let activeArr = groupActive\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      activeArr = allParents\r\n    } else {\r\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\r\n    }\r\n\r\n    // ** Set open group removing any activegroup item present in opengroup state\r\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\r\n    setGroupOpen([...openArr])\r\n\r\n    // **  Set Active Group\r\n    setGroupActive([...activeArr])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\r\n      toggleActiveGroup(item.id)\r\n    } else {\r\n      toggleOpenGroup(item.id, parentItem)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            toggleActiveGroup={toggleActiveGroup}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>\r\n        <FormattedMessage id={item.header} />\r\n      </span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Utils\r\nimport {\r\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent\r\n} from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Context\r\n\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuSectionHeader,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\n// ** Vertical Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\nimport { isUserAdminFromUser } from '../../../../../utils'\r\nimport _ from 'underscore'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin, user } = props\r\n  let sideBarMenus = [...navigation.normalRoutes]\r\n  if (!_.isEmpty(user) && isUserAdminFromUser(user)) {\r\n    sideBarMenus = [...sideBarMenus, ...navigation.adminRoleRoutes]\r\n  }\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    if (menuCollapsed) {\r\n      setMenuHover(true)\r\n    }\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={sideBarMenus}\r\n                  groupActive={groupActive}\r\n                  setGroupActive={setGroupActive}\r\n                  activeItem={activeItem}\r\n                  setActiveItem={setActiveItem}\r\n                  groupOpen={groupOpen}\r\n                  setGroupOpen={setGroupOpen}\r\n                  routerProps={routerProps}\r\n                  menuCollapsed={menuCollapsed}\r\n                  menuHover={menuHover}\r\n                  currentActiveItem={currentActiveItem}\r\n                  user={user}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  user: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    loading: state.auth.loading,\r\n    user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Sidebar)\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBWrkg4c9MIjBFFl8O21935qxKml_M7sVo\",\r\n    authDomain: \"ef-nl-dev.firebaseapp.com\",\r\n    projectId: \"ef-nl-dev\",\r\n    storageBucket: \"ef-nl-dev.appspot.com\",\r\n    messagingSenderId: \"398599617169\",\r\n    appId: \"1:398599617169:web:69b6cf733714416a31dd30\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase","// ** React Imports\r\nimport { useState } from 'react'\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { ChevronUp } from 'react-feather'\r\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\n\r\nconst AppCollapse = props => {\r\n  // ** Props\r\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\r\n\r\n  /**\r\n   ** If accordion is true then return only one active index else return an Array\r\n   */\r\n  const defaultActive = () => {\r\n    if (accordion) {\r\n      return active\r\n    } else {\r\n      return [...active]\r\n    }\r\n  }\r\n\r\n  // ** State\r\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\r\n\r\n  // ** Function to handle Collapse Toggle\r\n  const handleCollapseToggle = id => {\r\n    if (accordion) {\r\n      if (id === openCollapse) {\r\n        setOpenCollapse(null)\r\n      } else {\r\n        setOpenCollapse(id)\r\n      }\r\n    } else {\r\n      const arr = openCollapse,\r\n        index = arr.indexOf(id)\r\n      if (arr.includes(id)) {\r\n        arr.splice(index, 1)\r\n        setOpenCollapse([...arr])\r\n      } else {\r\n        arr.push(id)\r\n        setOpenCollapse([...arr])\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to render collapse\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const title = titleKey ? item[titleKey] : item.title,\r\n        content = contentKey ? item[contentKey] : item.content\r\n\r\n      return (\r\n        <Card\r\n          className={classnames('app-collapse', {\r\n            [item.className]: item.className,\r\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\r\n          })}\r\n          key={index}\r\n        >\r\n          <CardHeader\r\n            className={classnames('align-items-center', {\r\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\r\n            })}\r\n            /*eslint-disable */\r\n            {...(toggle === 'hover'\r\n              ? {\r\n                  onMouseEnter: () => handleCollapseToggle(index)\r\n                }\r\n              : {\r\n                  onClick: () => handleCollapseToggle(index)\r\n                })}\r\n            /*eslint-enable */\r\n          >\r\n            <CardTitle className='collapse-title'>{title}</CardTitle>\r\n            <ChevronUp size={14} />\r\n          </CardHeader>\r\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\r\n            <CardBody>{content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('collapse-icon', {\r\n        [className]: className,\r\n        'collapse-default': !type,\r\n        'collapse-shadow': type === 'shadow',\r\n        'collapse-border': type === 'border',\r\n        'collapse-margin': type === 'margin'\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCollapse\r\n\r\n// ** PropTypes\r\nAppCollapse.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  accordion: Proptypes.bool,\r\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\r\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\r\n  titleKey: Proptypes.string,\r\n  contentKey: Proptypes.string,\r\n  className: Proptypes.string\r\n}\r\n\r\n// ** Default Props\r\nAppCollapse.defaultProps = {\r\n  active: [],\r\n  toggle: 'click'\r\n}\r\n","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\n// custom import\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\nimport OnlineUsers from '@src/views/Dashboard/components/OnlineUsers'\r\nimport AppCollapse from '@components/app-collapse'\r\nimport { FaUser } from \"react-icons/fa\"\r\n\r\nfunction OnlineUserPopUp({onlineUsers}) {\r\n    const { colors } = useContext(ThemeColors),\r\n    trackBgColor = '#e9ecef'\r\n    return (\r\n        <div className=\"online-pop-wrapper\">\r\n            <AppCollapse \r\n                data={\r\n                    [\r\n                        {\r\n                            title: (<>\r\n                                <FaUser id=\"user-icon\" /> Online User ( {onlineUsers.length} )\r\n                            </>),\r\n                            content: (\r\n                                <OnlineUsers colors={colors} trackBgColor={trackBgColor} showheader={false} />\r\n                            )\r\n                        }\r\n                    ]\r\n                } /> \r\n        </div>\r\n    )\r\n}\r\n\r\nOnlineUserPopUp.propTypes = {\r\n  onlineUsers: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        onlineUsers: state.auth.onlineUsers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(OnlineUserPopUp)\r\n\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { compose } from 'redux'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch, connect } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\nimport {getInitOnlineUsers, removeOnlineUsers, addUserFireBaseToken, getAllOnlineUserSubs, updateOnlineUsers} from '@src/redux/actions/auth'\r\nimport {handleOnlineUserHidden} from '@src/redux/actions/layout'\r\nimport {getUsersRoom, removeUsersRoom} from '@src/redux/actions/rooms'\r\n\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\n// ** Custom Imports\r\nimport firebase from '@src/firebase'\r\nimport _ from 'underscore'\r\nimport {CONSTANTS} from '@src/utils/CONSTANTS'\r\nimport OnlineUserPopUp from './components/OnlineUserPopUp'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, routerProps, currentActiveItem, getInitOnlineUsers, removeOnlineUsers, getAllOnlineUserSubs, updateOnlineUsers, user, addUserFireBaseToken, onlineUsers, handleOnlineUserHidden, showOnlineUserPopup, getUsersRoom, removeUsersRoom } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  let userSubcription\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n    if (!_.isEmpty(location)) {\r\n      let payload =  CONSTANTS.ROUTES_HIDE_ONLINE_POPUP.findIndex(li => {\r\n        return li === location.pathname\r\n      })\r\n      payload = !(payload > -1)\r\n      handleOnlineUserHidden(payload)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    getInitOnlineUsers()\r\n    getUsersRoom(true)\r\n    userSubcription = getAllOnlineUserSubs(user => {\r\n      setTimeout(() => {\r\n        const currentUserId = localStorage.getItem('userId')\r\n        if (currentUserId !== user._id && onlineUsers) {\r\n          const isUserPresent = onlineUsers.find(ou => ou._id === user._id && ou.isOnline === user.isOnline)\r\n          if (_.isEmpty(isUserPresent)) {\r\n            updateOnlineUsers(user)\r\n          }\r\n        }\r\n      }, 1000)\r\n    })\r\n    return () => {\r\n      removeOnlineUsers()\r\n      removeUsersRoom()\r\n      if (userSubcription && userSubcription.subscription) {\r\n        userSubcription.subscription.unsubscribe()\r\n      }\r\n      setIsMounted(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(async () => {\r\n    if (!_.isEmpty(user)) {\r\n      try {\r\n        const messaging = firebase.messaging()\r\n        const token = await messaging.getToken()\r\n        if (token) {\r\n          const {firebase} = user\r\n          if (firebase && firebase.web && firebase.web.length) {\r\n            const isRegitered = firebase.web.includes(token)\r\n            if (!isRegitered) {\r\n              const result = await addUserFireBaseToken(token)\r\n            }\r\n          } else {\r\n            const result = await addUserFireBaseToken(token)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('error: ', error)\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          routerProps={routerProps}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} showOnlineUserPopup={showOnlineUserPopup} handleOnlineUserHidden={handleOnlineUserHidden} location={location} />}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          menuCollapsed={menuCollapsed}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      {showOnlineUserPopup && <OnlineUserPopUp />}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '9%', right:\"10px\", zIndex: 10000 }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nVerticalLayout.propTypes = {\r\n  addUserFireBaseToken: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  onlineUsers: PropTypes.array.isRequired,\r\n  getInitOnlineUsers: PropTypes.func.isRequired,\r\n  handleOnlineUserHidden: PropTypes.func.isRequired,\r\n  removeOnlineUsers: PropTypes.func.isRequired,\r\n  getAllOnlineUserSubs: PropTypes.func.isRequired,\r\n  updateOnlineUsers: PropTypes.func.isRequired,\r\n  showOnlineUserPopup: PropTypes.bool.isRequired,\r\n  getUsersRoom: PropTypes.func.isRequired,\r\n  removeUsersRoom: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user,\r\n    onlineUsers: state.auth.onlineUsers,\r\n    showOnlineUserPopup: state.layout.showOnlineUserPopup\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {addUserFireBaseToken, getInitOnlineUsers, removeOnlineUsers, getAllOnlineUserSubs, updateOnlineUsers, handleOnlineUserHidden, getUsersRoom, removeUsersRoom})(VerticalLayout)\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\nconst VerticalLayout = props => <Layout {...props}>{props.children}</Layout>\r\n\r\nexport default VerticalLayout\r\n","import { Home, Activity, ShoppingCart } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    header: 'DashBoard'\r\n  },\r\n  {\r\n    id: 'dashboards',\r\n    title: 'Dashboards',\r\n    icon: <Home />,\r\n    navLink: '/dashboard'\r\n  }\r\n]\r\n","// ** Navigation sections imports\r\nimport dashboards from './dashboards'\r\n\r\nexport default [...dashboards]","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Horizontal menu items array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { DropdownItem } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuLink = ({\r\n  item,\r\n  setOpenDropdown,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  routerProps,\r\n  currentActiveItem,\r\n  isChild\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\r\n\r\n  // ** Get parents of current items\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    allParents.pop()\r\n    return allParents\r\n  }\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive } from '@layouts/utils'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const {\r\n    item,\r\n    submenu,\r\n    groupActive,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    openDropdown,\r\n    setGroupActive,\r\n    activeItem,\r\n    setActiveItem,\r\n    routerProps,\r\n    setOpenDropdown,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** URL Var\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Dropdown menu modifiers\r\n  const menuModifiers = {\r\n    setMaxHeight: {\r\n      enabled: true,\r\n      fn: data => {\r\n        const pageHeight = window.innerHeight,\r\n          ddTop = data.instance.reference.getBoundingClientRect().top,\r\n          ddHeight = data.popper.height\r\n        let maxHeight, stylesObj\r\n\r\n        // ** Calculate and set height\r\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n          maxHeight = pageHeight - ddTop - 25\r\n          stylesObj = {\r\n            maxHeight,\r\n            overflowY: 'auto'\r\n          }\r\n        }\r\n\r\n        const ddRef = data.instance.popper.getBoundingClientRect()\r\n\r\n        // ** If there is not space left to open sub menu open it to the right\r\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\r\n        }\r\n\r\n        return {\r\n          ...data,\r\n          styles: {\r\n            ...stylesObj\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Dropdown\r\n      tag='li'\r\n      className={classnames({\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active':\r\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\r\n      })}\r\n      isOpen={openDropdown.includes(item.id)}\r\n      toggle={() => onMouseEnter(item.id)}\r\n      onMouseEnter={() => onMouseEnter(item.id)}\r\n      onMouseLeave={() => onMouseLeave(item.id)}\r\n    >\r\n      <DropdownToggle\r\n        to='/'\r\n        tag={Link}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n        onClick={e => e.preventDefault()}\r\n      >\r\n        {item.icon}\r\n        <span>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n      </DropdownToggle>\r\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\r\n        <HorizontalNavMenuItems\r\n          submenu={true}\r\n          parentItem={item}\r\n          items={item.children}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          openDropdown={openDropdown}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          isChild={true}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\n\r\n// ** Ability Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Menu Components Imports\r\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\r\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\r\nimport {\r\n  resolveHorizontalNavMenuItemComponent as resolveNavItemComponent,\r\n  canViewMenuGroup,\r\n  canViewMenuItem\r\n} from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuItems = props => {\r\n  // ** Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Components Object\r\n  const Components = {\r\n    HorizontalNavMenuGroup,\r\n    HorizontalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return canViewMenuItem(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default HorizontalNavMenuItems\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Horizontal Menu Array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Horizontal Menu Components\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\r\n  // ** States\r\n  const [activeItem, setActiveItem] = useState(null)\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [openDropdown, setOpenDropdown] = useState([])\r\n\r\n  // ** On mouse enter push the ID to openDropdown array\r\n  const onMouseEnter = id => {\r\n    const arr = openDropdown\r\n    arr.push(id)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  // ** On mouse leave remove the ID to openDropdown array\r\n  const onMouseLeave = id => {\r\n    const arr = openDropdown\r\n    arr.splice(arr.indexOf(id), 1)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-container main-menu-content'>\r\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\r\n        <HorizontalNavMenuItems\r\n          submenu={false}\r\n          items={navigation}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          openDropdown={openDropdown}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalMenu\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport NavbarComponent from './components/navbar'\r\nimport FooterComponent from './components/footer'\r\nimport MenuComponent from './components/menu/horizontal-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\r\n\r\nconst HorizontalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Vars\r\n  const contentWidth = layoutStore.contentWidth\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  // ** UseEffect Cleanup\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        } menu-expanded`\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar\r\n        expand='lg'\r\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\r\n          'navbar-scrolled': navbarScrolled\r\n        })}\r\n      >\r\n        {!navbar && (\r\n          <div className='navbar-header d-xl-block d-none'>\r\n            <ul className='nav navbar-nav'>\r\n              <NavItem>\r\n                <Link to='/' className='navbar-brand'>\r\n                  <span className='brand-logo'>\r\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n                  </span>\r\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n                </Link>\r\n              </NavItem>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {!isHidden ? (\r\n        <div className='horizontal-menu-wrapper'>\r\n          <Navbar\r\n            tag='div'\r\n            expand='sm'\r\n            light={skin !== 'dark'}\r\n            dark={skin === 'dark' || bgColorCondition}\r\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\r\n              [navbarClasses[navbarType]]: navbarType !== 'static',\r\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\r\n            })}\r\n          >\r\n            {menu ? menu : <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />}\r\n          </Navbar>\r\n        </div>\r\n      ) : null}\r\n\r\n      {children}\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300}  style={{ bottom: '10%', right:\"10px\", zIndex: 10000 }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HorizontalLayout\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/HorizontalLayout'\r\n\r\nconst HorizontalLayout = props => <Layout {...props}>{props.children}</Layout>\r\n\r\nexport default HorizontalLayout\r\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserAdmin, isUserLoggedIn, removeSigninUserDetails } from '../utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n       removeSigninUserDetails()\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && !isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      removeSigninUserDetails()\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.adminRoute && isUserLoggedIn()) {\r\n      if (!isUserAdmin()) {\r\n        // removeSigninUserDetails()\r\n        return <Redirect to='/misc/not-authorized' />\r\n      } else {\r\n        return <route.component {...props} />\r\n      }\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                  appLayout: route.appLayout\r\n                                }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                  routeMeta: route.meta\r\n                                }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                  wrapperClass: route.className\r\n                                }\r\n                              : {})}\r\n                            /*eslint-enable */\r\n                          >\r\n                            <FinalRoute route={route} {...props} />\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        {/* <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : (<Redirect to='/login' />)\r\n          }}\r\n        /> */}\r\n        {/* Not Auth Route */}\r\n        {/* <Route\r\n          exact\r\n          path='/misc/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        /> */}\r\n        {ResolveRoutes()}\r\n\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.error(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.error(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n"],"sourceRoot":""}