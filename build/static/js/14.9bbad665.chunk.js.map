{"version":3,"sources":["views/components/Loader/index.js","assets/images/pages/not-authorized.svg","assets/images/pages/error.svg","assets/images/pages/coming-soon.svg","assets/images/pages/under-maintenance.svg","@core/components/input-password-toggle/index.js","assets/images/pages sync /^/.*$","assets/images/pages/coming-soon-dark.svg","assets/images/pages/error-dark.svg","assets/images/pages/forgot-password-v2-dark.svg","assets/images/pages/forgot-password-v2.svg","assets/images/pages/login-v2-dark.svg","assets/images/pages/login-v2.svg","assets/images/pages/not-authorized-dark.svg","assets/images/pages/register-v2-dark.svg","assets/images/pages/register-v2.svg","assets/images/pages/reset-password-v2-dark.svg","assets/images/pages/reset-password-v2.svg","assets/images/pages/under-maintenance-dark.svg","redux/actions/layoutSettings/index.js","views/pages/authentication/Login.js"],"names":["LoaderComponent","loading","className","color","style","display","margin","size","InputPasswordToggle","props","label","hideIcon","showIcon","visible","htmlFor","placeholder","iconSize","inputClassName","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","addonType","onClick","renderIcon","defaultProps","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","require","SET_LAYOUT_SETTINGS","SET_LOADER","SET_TOTAL","SET_LAYOUT_SETTING","getLayoutSettings","limit","page","searchString","dispatch","payload","layoutSettingsQuery","gql","client","query","variables","skip","data","handleAuthResponse","success","layoutSettings","getFieldValue","_","isEmpty","console","error","removeLayoutSettings","getLayoutSettingById","layoutSetting","removeLayourSetting","updateLayourSetting","position","html","isProdVisible","isQaVisible","isLiveVisible","layoutSettingsMutation","mutate","mutation","input","_id","getLayoutSettingsBypagePostion","updateLayoutSettingStore","connect","state","auth","layoutLoading","showToastMessage","loginUser","loginWithgoogle","loginWithFacebook","getUserDetails","useSkin","skin","email","setEmail","password","setPassword","headerHtml","setHeaderHtml","history","useHistory","useEffect","illustration","LoginSchema","default","yup","shape","required","min","useForm","mode","resolver","yupResolver","register","errors","handleSubmit","onSubmit","isObjEmpty","result","push","message","length","responseGoogle","response","googleId","tokenId","responseFacebook","userID","accessToken","dangerouslySetInnerHTML","__html","md","autoFocus","value","name","onChange","target","innerRef","validate","invalid","to","Ripple","block","CONSTANTS","FACEBOOK_APP_ID","appId","callback","render","renderProps","boxShadow","border","width","height","viewBox","d","fill","GOOLE_CLIENT_ID","clientId","disabled","xmlns","fillRule","buttonText","onSuccess","onFailure","cookiePolicy"],"mappings":"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","file":"static/js/14.9bbad665.chunk.js","sourcesContent":["import React from \"react\"\r\nimport RingLoader from \"react-spinners/RingLoader\"\r\n\r\nconst LoaderComponent = ({loading}) => {\r\n  \r\n  return loading && <div className=\"sweet-loading\">\r\n    <RingLoader color=\"#1061ae\" loading={loading} style={{ \r\n          display: \"block\",\r\n          margin: \"0 auto\"\r\n    }} size={100} />\r\n  </div>\r\n}\r\nexport default LoaderComponent","export default __webpack_public_path__ + \"static/media/not-authorized.e62938f3.svg\";","export default __webpack_public_path__ + \"static/media/error.51731f25.svg\";","export default __webpack_public_path__ + \"static/media/coming-soon.17976db6.svg\";","export default __webpack_public_path__ + \"static/media/under-maintenance.2660be57.svg\";","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n","var map = {\n\t\"./coming-soon-dark.svg\": 157,\n\t\"./coming-soon.svg\": 138,\n\t\"./error-dark.svg\": 158,\n\t\"./error.svg\": 135,\n\t\"./forgot-password-v2-dark.svg\": 159,\n\t\"./forgot-password-v2.svg\": 160,\n\t\"./login-v2-dark.svg\": 161,\n\t\"./login-v2.svg\": 162,\n\t\"./not-authorized-dark.svg\": 163,\n\t\"./not-authorized.svg\": 134,\n\t\"./register-v2-dark.svg\": 164,\n\t\"./register-v2.svg\": 165,\n\t\"./reset-password-v2-dark.svg\": 166,\n\t\"./reset-password-v2.svg\": 167,\n\t\"./under-maintenance-dark.svg\": 168,\n\t\"./under-maintenance.svg\": 139\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 156;","export default __webpack_public_path__ + \"static/media/coming-soon-dark.f207ad55.svg\";","export default __webpack_public_path__ + \"static/media/error-dark.406697eb.svg\";","export default __webpack_public_path__ + \"static/media/forgot-password-v2-dark.3fafaebb.svg\";","export default __webpack_public_path__ + \"static/media/forgot-password-v2.490e62f0.svg\";","export default __webpack_public_path__ + \"static/media/login-v2-dark.de2fe17f.svg\";","export default __webpack_public_path__ + \"static/media/login-v2.2198399d.svg\";","export default __webpack_public_path__ + \"static/media/not-authorized-dark.41866679.svg\";","export default __webpack_public_path__ + \"static/media/register-v2-dark.86ba45a1.svg\";","export default __webpack_public_path__ + \"static/media/register-v2.4620a1e5.svg\";","export default __webpack_public_path__ + \"static/media/reset-password-v2-dark.8b773a08.svg\";","export default __webpack_public_path__ + \"static/media/reset-password-v2.477a1e51.svg\";","export default __webpack_public_path__ + \"static/media/under-maintenance-dark.7bd8f662.svg\";","import gql from 'graphql-tag'\r\nimport _ from 'underscore'\r\nimport client from '../../../graphql/client'\r\nimport { getFieldValue, handleAuthResponse } from '../../../utils'\r\nconst {SET_LAYOUT_SETTINGS, SET_LOADER, SET_TOTAL, SET_LAYOUT_SETTING} = require('../../types')\r\n\r\nexport const getLayoutSettings = (limit, page, searchString) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const layoutSettingsQuery = gql`\r\n             query getLayoutSettings($limit: Int, $skip: Int, $searchString:String){\r\n                getLayoutSettings(limit: $limit, skip: $skip, searchString:$searchString ){\r\n                statusCode\r\n                success\r\n                message\r\n                data{\r\n                    totalPages\r\n                    skip\r\n                    limit\r\n                    data{\r\n                    _id\r\n                    page\r\n                    position\r\n                    html\r\n                    isQaVisible\r\n                    isProdVisible\r\n                    isLiveVisible\r\n                    }\r\n                }\r\n                nextToken\r\n            }\r\n          }`\r\n        const {data} = await client.query({\r\n            query: layoutSettingsQuery,\r\n            variables: {\r\n                limit, \r\n                skip: (page * limit),\r\n                searchString\r\n            }\r\n        })\r\n        handleAuthResponse(data.getLayoutSettings)\r\n        const {success} = data.getLayoutSettings\r\n        if (success) {\r\n            const layoutSettings = getFieldValue(data, 'getLayoutSettings.data.data')\r\n            if (!_.isEmpty(layoutSettings)) {\r\n                dispatch({\r\n                    type: SET_LAYOUT_SETTINGS,\r\n                    payload: layoutSettings\r\n                })\r\n                dispatch({\r\n                    type: SET_TOTAL,\r\n                    payload: getFieldValue(data, 'getLayoutSettings.data.totalPages')\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: SET_LAYOUT_SETTINGS,\r\n                    payload: []\r\n                })\r\n                dispatch({\r\n                    type: SET_TOTAL,\r\n                    payload: 0\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LAYOUT_SETTINGS,\r\n            payload: []\r\n        })\r\n        dispatch({\r\n            type: SET_TOTAL,\r\n            payload: 0\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeLayoutSettings = () => async dispatch => {\r\n    dispatch({\r\n        type: SET_LAYOUT_SETTINGS,\r\n        payload: []\r\n    })\r\n    dispatch({\r\n        type: SET_TOTAL,\r\n        payload: 0\r\n    })\r\n}\r\n\r\nexport const getLayoutSettingById = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const layoutSettingsQuery = gql`\r\n             query getLayoutSettingById($id: ID){\r\n                getLayoutSettingById(id: $id){\r\n                statusCode\r\n                success\r\n                message\r\n                data{\r\n                    _id\r\n                    page\r\n                    position\r\n                    html\r\n                }\r\n                nextToken\r\n            }\r\n          }`\r\n        const {data} = await client.query({\r\n            query: layoutSettingsQuery,\r\n            variables: {\r\n                id\r\n            }\r\n        })\r\n        handleAuthResponse(data.getLayoutSettingById)\r\n        const {success} = data.getLayoutSettingById\r\n        if (success) {\r\n            const layoutSetting = getFieldValue(data, 'getLayoutSettingById.data')\r\n            if (!_.isEmpty(layoutSetting)) {\r\n                dispatch({\r\n                    type: SET_LAYOUT_SETTING,\r\n                    payload: layoutSetting\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: SET_LAYOUT_SETTING,\r\n                    payload: {}\r\n                })\r\n                dispatch({\r\n                    type: SET_TOTAL,\r\n                    payload: 0\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        dispatch({\r\n            type: SET_LAYOUT_SETTING,\r\n            payload: {}\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeLayourSetting = () => dispatch => {\r\n    dispatch({\r\n        type: SET_LAYOUT_SETTING,\r\n        payload: {}\r\n    })\r\n}\r\nexport const updateLayourSetting = ({page, position, html, id, isProdVisible, isQaVisible, isLiveVisible}) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const layoutSettingsMutation = gql`\r\n            mutation layoutSettingsMutation($input: LayoutSettingsInput){\r\n                layoutSettingsMutation(input: $input){\r\n                    statusCode\r\n                    success\r\n                    message\r\n                    nextToken\r\n                    data{\r\n                        page\r\n                        position\r\n                        html\r\n                        isQaVisible\r\n                        isProdVisible\r\n                        isLiveVisible\r\n                        createdBy\r\n                        createdAt\r\n                        updatedBy\r\n                        updatedAt\r\n                    }\r\n                }\r\n            }`\r\n        const {data} = await client.mutate({\r\n            mutation: layoutSettingsMutation,\r\n            variables: {\r\n                input: {\r\n                    page,\r\n                    position,\r\n                    html,\r\n                    isProdVisible,\r\n                    isQaVisible,\r\n                    isLiveVisible,\r\n                    _id: id\r\n                }\r\n            }\r\n        })\r\n        handleAuthResponse(data.layoutSettingsMutation)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        return data.layoutSettingsMutation\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const getLayoutSettingsBypagePostion = (page, position) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const layoutSettingsQuery = gql`\r\n             query getLayoutSettingsBypagePostion($page: String, $position: String){\r\n                getLayoutSettingsBypagePostion(page: $page, position: $position){\r\n                statusCode\r\n                success\r\n                message\r\n                data{\r\n                    _id\r\n                    page\r\n                    position\r\n                    html\r\n                }\r\n                nextToken\r\n            }\r\n          }`\r\n        const {data} = await client.query({\r\n            query: layoutSettingsQuery,\r\n            variables: {\r\n                page,\r\n                position\r\n            }\r\n        })\r\n        const {success} = data.getLayoutSettingsBypagePostion\r\n        if (success) {\r\n            const layoutSetting = getFieldValue(data, 'getLayoutSettingsBypagePostion.data')\r\n            if (!_.isEmpty(layoutSetting)) {\r\n                dispatch({\r\n                    type: SET_LAYOUT_SETTING,\r\n                    payload: layoutSetting\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: SET_LAYOUT_SETTING,\r\n                    payload: {}\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        dispatch({\r\n            type: SET_LAYOUT_SETTING,\r\n            payload: {}\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateLayoutSettingStore = (layoutSettings) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_LAYOUT_SETTINGS,\r\n    payload: layoutSettings\r\n  })\r\n}","import { useState, Fragment, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useForm } from 'react-hook-form'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { isObjEmpty } from '@utils'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Card, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button, Row, Col, FormFeedback } from 'reactstrap'\r\nimport { loginUser, loginWithFacebook, loginWithgoogle, getUserDetails } from '../../../redux/actions/auth'\r\nimport {getLayoutSettingsBypagePostion, removeLayourSetting} from '@src/redux/actions/layoutSettings'\r\nimport { showToastMessage } from '../../../redux/actions/toastNotification'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport LoaderComponent from '../../components/Loader'\r\n// import { Facebook, Mail } from 'react-feather'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport { CONSTANTS } from '../../../utils/CONSTANTS'\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\r\n\r\nimport '@styles/base/pages/page-auth.scss'\r\n\r\nconst Login = (props) => {\r\n  const [skin, setSkin] = useSkin()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [headerHtml, setHeaderHtml] = useState(`\r\n    <CardTitle tag='h4' className='mb-1'>\r\n      Welcome to E-Foot.Nl! 👋\r\n      </CardTitle>\r\n    <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>`)\r\n  const {loginUser, showToastMessage, loading, loginWithgoogle, loginWithFacebook, getUserDetails, getLayoutSettingsBypagePostion, removeLayourSetting, layoutLoading, layoutSetting} = props\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    getLayoutSettingsBypagePostion('login', 'header')\r\n    return () => {\r\n      removeLayourSetting()\r\n    }\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    if (layoutSetting) {\r\n      setHeaderHtml(layoutSetting.html)\r\n    } else {\r\n\r\n    }\r\n  }, [layoutSetting])\r\n\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n  \r\n  const LoginSchema = yup.object().shape({\r\n    email: yup.string().email().required(),\r\n    password: yup.string().min(5).required()\r\n  })\r\n  \r\n  const { register, errors, handleSubmit } = useForm({ mode: 'onBlur', resolver: yupResolver(LoginSchema) })\r\n  const onSubmit = async data => {\r\n    if (isObjEmpty(errors)) {\r\n      try {\r\n        const result = await loginUser(data)\r\n        if (result.success) {\r\n          await getUserDetails()\r\n          showToastMessage(\"Welcome to Efoot-nl\", 'success')\r\n          history.push(\"/dashboard\")\r\n        } else {\r\n          let message = \"Unable to Login\"\r\n          if (result.message && result.message.length) {\r\n            message = result.message[0]\r\n          }\r\n          showToastMessage(message, 'error')\r\n        }\r\n      } catch (error) {\r\n        console.error('error: ', error)\r\n        showToastMessage(error.message, 'error')\r\n      }\r\n    }\r\n  }\r\n\r\n  const responseGoogle = async (response) => {\r\n\r\n    const {googleId, tokenId} = response\r\n    if (tokenId) {\r\n      try {\r\n        const result = await loginWithgoogle(tokenId, googleId)\r\n        if (result.success) {\r\n          await getUserDetails()\r\n          showToastMessage(\"Welcome to Efoot-nl\", 'success')\r\n          history.push(\"/dashboard\")\r\n        } else {\r\n          let message = \"Unable to Login\"\r\n          if (result.message && result.message.length) {\r\n            message = result.message[0]\r\n          }\r\n          showToastMessage(message, 'error')\r\n        }\r\n      } catch (error) {\r\n        console.error('error: ', error)\r\n        showToastMessage(error.message, 'error')\r\n      }\r\n    }\r\n  }\r\n\r\n  const responseFacebook = async (response) => {\r\n    const {userID, accessToken} = response\r\n    if (accessToken) {\r\n      try {\r\n        const result = await loginWithFacebook(accessToken, userID)\r\n        if (result.success) {\r\n          await getUserDetails()\r\n          showToastMessage(\"Welcome to Efoot-nl\", 'success')\r\n          history.push(\"/dashboard\")\r\n        } else {\r\n          let message = \"Unable to Login\"\r\n          if (result.message && result.message.length) {\r\n            message = result.message[0]\r\n          }\r\n          showToastMessage(message, 'error')\r\n        }\r\n      } catch (error) {\r\n        console.error('error: ', error)\r\n        showToastMessage(error.message, 'error')\r\n      }\r\n    }\r\n  }\r\n  \r\n  const getGoogleSvg = () => {\r\n    return (<svg width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#000\" fillRule=\"evenodd\"><path d=\"M9 3.48c1.69 0 2.83.73 3.48 1.34l2.54-2.48C13.46.89 11.43 0 9 0 5.48 0 2.44 2.02.96 4.96l2.91 2.26C4.6 5.05 6.62 3.48 9 3.48z\" fill=\"#EA4335\"></path><path d=\"M17.64 9.2c0-.74-.06-1.28-.19-1.84H9v3.34h4.96c-.1.83-.64 2.08-1.84 2.92l2.84 2.2c1.7-1.57 2.68-3.88 2.68-6.62z\" fill=\"#4285F4\"></path><path d=\"M3.88 10.78A5.54 5.54 0 0 1 3.58 9c0-.62.11-1.22.29-1.78L.96 4.96A9.008 9.008 0 0 0 0 9c0 1.45.35 2.82.96 4.04l2.92-2.26z\" fill=\"#FBBC05\"></path><path d=\"M9 18c2.43 0 4.47-.8 5.96-2.18l-2.84-2.2c-.76.53-1.78.9-3.12.9-2.38 0-4.4-1.57-5.12-3.74L.97 13.04C2.45 15.98 5.48 18 9 18z\" fill=\"#34A853\"></path><path fill=\"none\" d=\"M0 0h18v18H0z\"></path></g></svg>)\r\n  }\r\n\r\n  const getFbSvg = () => {\r\n    return (<svg aria-hidden=\"true\" className=\"svg-icon iconFacebook\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\"><path d=\"M3 1a2 2 0 00-2 2v12c0 1.1.9 2 2 2h12a2 2 0 002-2V3a2 2 0 00-2-2H3zm6.55 16v-6.2H7.46V8.4h2.09V6.61c0-2.07 1.26-3.2 3.1-3.2.88 0 1.64.07 1.87.1v2.16h-1.29c-1 0-1.19.48-1.19 1.18V8.4h2.39l-.31 2.42h-2.08V17h-2.5z\" fill=\"#fff\"></path></svg>)\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-v1 px-2'>\r\n      <LoaderComponent loading={loading || layoutLoading} />\r\n      <div className='auth-inner py-2'>\r\n        <Card className='mb-0'>\r\n          <CardBody>\r\n            <div dangerouslySetInnerHTML={{__html: headerHtml}} />\r\n            <div className='divider my-2'>\r\n              {/* <div className='divider-text'>or</div> */}\r\n            </div>\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <Label className='form-label' for='email'>\r\n                      Email\r\n                    </Label>\r\n                    <Input\r\n                      autoFocus\r\n                      type='email'\r\n                      value={email}\r\n                      id='email'\r\n                      name='email'\r\n                      placeholder='john@example.com'\r\n                      onChange={e => setEmail(e.target.value)}\r\n                      className={classnames({ 'is-invalid': errors['email'] })}\r\n                      innerRef={register({ required: true, validate: value => value !== '' })}\r\n                      invalid={errors.email && true}              \r\n                    />\r\n                    {errors && errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <div className='d-flex justify-content-between'>\r\n                      <Label className='form-label' for='password'>\r\n                        Password\r\n                      </Label>\r\n                    </div>\r\n                    <InputPasswordToggle\r\n                      value={password}\r\n                      id='password'\r\n                      name='password'\r\n                      className='input-group-merge'\r\n                      onChange={e => setPassword(e.target.value)}\r\n                      className={classnames({ 'is-invalid': errors['password'] })}\r\n                      innerRef={register({ required: true })}\r\n                      invalid={errors.password && true}\r\n                    />\r\n                    {errors && errors.password && <FormFeedback>{errors.password.message}</FormFeedback>}\r\n                    <div className='d-flex justify-content-end'>\r\n                      <Link to='/forgot-password'>\r\n                        <small>Forgot Password?</small>\r\n                      </Link>\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Button.Ripple type='submit' color='primary' block>\r\n                Sign in\r\n              </Button.Ripple>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='mr-25'>New on our platform?</span>\r\n              <Link to='/register'>\r\n                <span>Create an account</span>\r\n              </Link>\r\n            </p>\r\n            <Row className='auth-footer-btn mt-3'>\r\n              <Col md=\"6\">\r\n                {CONSTANTS.FACEBOOK_APP_ID && <FacebookLogin\r\n                  appId={CONSTANTS.FACEBOOK_APP_ID}\r\n                  callback={responseFacebook}\r\n                  render={renderProps => (\r\n                    <Button.Ripple color='facebook' style={{boxShadow:\"0 4px 8px 0 rgb(34 41 47 / 50%)\", border: \"1px\"}} className=\"w-100\" block onClick={renderProps.onClick}>\r\n                      {getFbSvg()}\r\n                      <span className='align-middle ml-25'>Login with facebook</span>\r\n                    </Button.Ripple>\r\n                  )}\r\n                />}\r\n              </Col>\r\n              <Col md=\"6\">\r\n                {CONSTANTS.GOOLE_CLIENT_ID && <GoogleLogin\r\n                  clientId={CONSTANTS.GOOLE_CLIENT_ID}\r\n                  render={renderProps => (\r\n                    <Button.Ripple color='white' onClick={renderProps.onClick} className=\"w-100 box-shadow-google\" disabled={renderProps.disabled}>\r\n                        {getGoogleSvg()}\r\n                      <span className='align-middle ml-25'>Login with Google</span>\r\n                    </Button.Ripple>\r\n                  )}\r\n                  buttonText=\"Login With Google\"\r\n                  className=\"w-100\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                  cookiePolicy={'single_host_origin'}\r\n                />}\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  \r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  showToastMessage: PropTypes.func.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  loginWithgoogle: PropTypes.func.isRequired,\r\n  loginWithFacebook: PropTypes.func.isRequired,\r\n  getUserDetails: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  getLayoutSettingsBypagePostion: PropTypes.func.isRequired,\r\n  layoutLoading: PropTypes.bool.isRequired,\r\n  removeLayourSetting: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  loading: state.auth.loading,\r\n  layoutLoading:  state.layoutSettings.loading,\r\n  layoutSetting: state.layoutSettings.layoutSetting\r\n})\r\n\r\nexport default connect(mapStateToProps, {showToastMessage, loginUser, loginWithgoogle, loginWithFacebook, getUserDetails, getLayoutSettingsBypagePostion, removeLayourSetting})(Login)"],"sourceRoot":""}