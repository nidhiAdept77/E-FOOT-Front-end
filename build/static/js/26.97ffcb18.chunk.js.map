{"version":3,"sources":["views/components/Loader/index.js","@core/components/breadcrumbs/index.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/Label.js","@core/components/avatar-group/index.js","redux/actions/chatRequests/index.js","views/ChatRequests/components/addEditButtons.js","views/ChatRequests/components/avatarColumn.js","views/ChatRequests/components/ChatRequestColumns.js","views/ChatRequests/index.js"],"names":["LoaderComponent","loading","className","color","style","display","margin","size","BreadCrumbs","props","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","tag","to","active","propTypes","children","PropTypes","node","type","string","oneOfType","number","bsSize","valid","bool","invalid","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","stringOrNumberProp","columnProps","shape","order","offset","hidden","check","for","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","length","AvatarGroup","data","classnames","map","item","ItemTag","title","placement","target","split","join","meta","id","undefined","require","SET_CHAT_REQUESTS","UPDATE_CHAT_REQUESTS","SET_LOADER","SET_TOTAL","getUserChatRequests","limit","page","searchString","dispatch","payload","ChatRequestsQuery","gql","client","query","variables","skip","handleAuthResponse","getChatRequests","success","rooms","getFieldValue","_","isEmpty","console","error","updateChatRequests","_id","status","addRoomMutation","mutate","mutation","input","acceptRejectChatRequest","showToastMessage","message","AddEditBtn","createdBy","useDispatch","useSelector","state","auth","user","currentLoggedInUser","handleRejection","MySwal","withReactContent","Swal","fire","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","value","useState","hideButtons","setHideButtons","useEffect","Button","Ripple","onClick","UserAvatarGroup","userList","setUser","find","firstName","lastName","profilePicture","avatarDetails","img","RequestorName","columns","name","selector","sortable","cell","row","createdAt","moment","Date","parseInt","fromNow","isAdd","ChatRequests","chatRequests","total","searchValue","setSearchValue","currentPage","setCurrentPage","requests","setRequests","Card","Loader","Row","Col","onChange","e","currentTarget","setTimeout","noHeader","pagination","paginationServer","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName"],"mappings":"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","file":"static/js/26.97ffcb18.chunk.js","sourcesContent":["import React from \"react\"\r\nimport RingLoader from \"react-spinners/RingLoader\"\r\n\r\nconst LoaderComponent = ({loading}) => {\r\n  \r\n  return loading && <div className=\"sweet-loading\">\r\n    <RingLoader color=\"#1061ae\" loading={loading} style={{ \r\n          display: \"block\",\r\n          margin: \"0 auto\"\r\n    }} size={100} />\r\n  </div>\r\n}\r\nexport default LoaderComponent","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/dashboard'>Dashboard</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent && <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>}\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbActive && (\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>) }\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarGroup = props => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : 'div'\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      const ItemTag = item.tag ? item.tag : 'div'\r\n      return (\r\n        <Fragment key={i}>\r\n          {item.title ? (\r\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null}\r\n          {!item.meta ? (\r\n            <Avatar\r\n              tag={ItemTag}\r\n              className={classnames('pull-up', {\r\n                [item.className]: item.className\r\n              })}\r\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\r\n              title={undefined}\r\n              meta={undefined}\r\n              {...item}\r\n            />\r\n          ) : null}\r\n          {item.meta ? <ItemTag className='d-flex align-items-center pl-1'>{item.meta}</ItemTag> : null}\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar-group', {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n","import gql from 'graphql-tag'\r\nimport _ from 'underscore'\r\nimport client from '../../../graphql/client'\r\nimport { getFieldValue, handleAuthResponse } from '../../../utils'\r\nconst { SET_CHAT_REQUESTS, UPDATE_CHAT_REQUESTS, SET_LOADER, SET_TOTAL} = require('../../types')\r\nimport { showToastMessage } from '../../../redux/actions/toastNotification'\r\n\r\n\r\nexport const getUserChatRequests = (limit, page, searchString) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const ChatRequestsQuery = gql`query getChatRequests($limit: Int, $skip: Int, $searchString: String){\r\n            getChatRequests(limit: $limit, skip: $skip, searchString: $searchString){\r\n              statusCode\r\n              success\r\n              message\r\n              nextToken\r\n              data{\r\n                totalPages\r\n                skip\r\n                limit\r\n                data {\r\n                  _id\r\n                  type\r\n                  status\r\n                  createdBy\r\n                  userList {\r\n                    _id\r\n                    firstName\r\n                    lastName\r\n                    profilePicture\r\n                  }\r\n                  createdAt\r\n                }\r\n              }\r\n            }\r\n          }`\r\n        const {data} = await client.query({\r\n            query: ChatRequestsQuery,\r\n            variables: {\r\n                limit, \r\n                skip: (page * limit),\r\n                searchString\r\n            }\r\n        })\r\n        handleAuthResponse(data.getChatRequests)\r\n        const {success} = data.getChatRequests\r\n        if (success) {\r\n            const rooms = getFieldValue(data, 'getChatRequests.data.data')\r\n            if (!_.isEmpty(rooms)) {\r\n                dispatch({\r\n                    type: SET_CHAT_REQUESTS,\r\n                    payload: rooms\r\n                })\r\n                dispatch({\r\n                    type: SET_TOTAL,\r\n                    payload: getFieldValue(data, 'getChatRequests.data.totalPages')\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: SET_CHAT_REQUESTS,\r\n                    payload: []\r\n                })\r\n                dispatch({\r\n                    type: SET_TOTAL,\r\n                    payload: 0\r\n                })\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_CHAT_REQUESTS,\r\n            payload: []\r\n        })\r\n        dispatch({\r\n            type: SET_TOTAL,\r\n            payload: 0\r\n        })\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeChatRequests = () => dispatch => {\r\n    dispatch({\r\n        type: SET_CHAT_REQUESTS,\r\n        payload: []\r\n    })\r\n}\r\n\r\nexport const updateChatRequests = ({_id, status}) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: true\r\n        })\r\n        const addRoomMutation = gql`\r\n        mutation acceptRejectChatRequest( $input: ChatRequestsAcceptRejectInput ) {\r\n            acceptRejectChatRequest( input: $input  ) {\r\n                statusCode\r\n                success\r\n                message\r\n                data {\r\n                _id\r\n                status\r\n                }\r\n            }\r\n        }`\r\n        const { data } = await client.mutate({\r\n            mutation: addRoomMutation,\r\n            variables: {\r\n                input: {\r\n                    _id,\r\n                    status\r\n                }\r\n            }\r\n        })\r\n        handleAuthResponse(data.acceptRejectChatRequest)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n        if (data.acceptRejectChatRequest.success) {     \r\n            dispatch({\r\n                type: UPDATE_CHAT_REQUESTS,\r\n                payload: data.acceptRejectChatRequest.data\r\n            })\r\n        } else {\r\n            dispatch(showToastMessage(data.acceptRejectChatRequest.message, 'error'))\r\n        }\r\n        return data.acceptRejectChatRequest\r\n    } catch (error) {\r\n        console.error('error: ', error)\r\n        dispatch({\r\n            type: SET_LOADER,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n// export const deleteChatRequests = (id) => async dispatch => {\r\n//     try {\r\n//         dispatch({\r\n//             type: SET_LOADER,\r\n//             payload: true\r\n//         })\r\n//         const removeRoomMutation = gql`\r\n//             mutation removeRoom($input: RemoveRoomInput){\r\n//                 removeRoom(input: $input){\r\n//                     statusCode\r\n//                     success\r\n//                     message\r\n//                     data{\r\n//                         _id\r\n//                     }\r\n//                 }\r\n//             }`\r\n//         const {data} = await client.mutate({\r\n//             mutation: removeRoomMutation,\r\n//             variables: {\r\n//                 input: {\r\n//                     _id: id\r\n//                 }\r\n//             }\r\n//         })\r\n//         handleAuthResponse(data.removeRoom)\r\n//         dispatch({\r\n//             type: DELETE_USER_ROOM,\r\n//             payload: data.removeRoom.data\r\n//         })\r\n//         dispatch({\r\n//             type: SET_LOADER,\r\n//             payload: false\r\n//         })\r\n//         return data.removeRoom\r\n//     } catch (error) {\r\n//         console.error('error: ', error)\r\n//         dispatch({\r\n//             type: SET_LOADER,\r\n//             payload: false\r\n//         })\r\n//     }\r\n// }\r\n\r\n// rooms subscriptions\r\n// export const subsChatRooms = (handleChatRooms) => dispatch => {\r\n//     try {\r\n//         const chatRoomsSubscription = gql`\r\n//         subscription{\r\n//             chatRoomSubs {\r\n//               _id\r\n//               name\r\n//               userIds\r\n//               type\r\n//               createdAt\r\n//               default\r\n//               profileBg\r\n//               lastMessage {\r\n//                 message\r\n//                 createdAt\r\n//               }\r\n//               notifications{\r\n//                   _id\r\n//                   messageIds\r\n//                   roomId\r\n//                   userId\r\n//               }\r\n//               users {\r\n//                   _id\r\n//                   firstName\r\n//                   lastName\r\n//                   profilePicture\r\n//               }\r\n//             }\r\n//           }\r\n//         `\r\n//         const observable = client.subscribe({query:  chatRoomsSubscription})\r\n//         return observable.subscribe(({data}) => handleChatRooms(data.chatRoomSubs)) \r\n//     } catch (error) {\r\n//         console.error('error: ', error)\r\n//         dispatch({\r\n//             type: SET_LOADER,\r\n//             payload: false\r\n//         })\r\n//     }\r\n// }","import { FiEdit, FiTrash2 } from \"react-icons/fi\"\r\nimport { Button, Col } from \"reactstrap\"\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { updateChatRequests } from \"../../../redux/actions/chatRequests\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst AddEditBtn = ({data: {_id, createdBy, status}}) => {\r\n    const dispatch = useDispatch()\r\n    const {user: {_id: currentLoggedInUser = \"\"} = \"\"} = useSelector(state => state.auth)\r\n\r\n    const handleApproval = () => {\r\n      if (_id) {\r\n        dispatch(updateChatRequests({_id, status: \"accepted\"}))\r\n      }\r\n    }\r\n\r\n    const handleRejection = async () => {\r\n        const MySwal = withReactContent(Swal)\r\n        const result = await MySwal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, Reject it!',\r\n            customClass: {\r\n                confirmButton: 'btn btn-primary',\r\n                cancelButton: 'btn btn-outline-danger ml-1'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n        if (result.value && _id) {\r\n            // update request to reject\r\n            dispatch(updateChatRequests({_id, status: \"rejected\"}))\r\n        }\r\n      }\r\n\r\n      const [hideButtons, setHideButtons] = useState(\"\")\r\n\r\n      useEffect(() => {\r\n        setHideButtons(createdBy !== currentLoggedInUser && status === \"pending\")\r\n        return () => {\r\n        }\r\n      }, [currentLoggedInUser, status])\r\n\r\n    return (hideButtons ?\r\n      <div className=\"demo-inline-spacing\">\r\n        <Button.Ripple\r\n          className=\"btn-icon m-0\"\r\n          color=\"flat-success\"\r\n          onClick={handleApproval}\r\n        >\r\n          Accept\r\n        </Button.Ripple>\r\n        <Button.Ripple className=\"btn-icon m-0\" onClick={handleRejection} color=\"flat-danger\">\r\n          Reject\r\n        </Button.Ripple>\r\n      </div> : \"\"\r\n    )\r\n  }\r\n  \r\n  export default AddEditBtn\r\n  ","import AvatarGroup from '@components/avatar-group'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UserAvatarGroup = ({data: {userList}}) => {\r\n  const [user, setUser] = useState([])\r\n  const {_id} = useSelector(state => state.auth.user)\r\n  useEffect(() => {\r\n    if (userList.length) {\r\n      const {firstName, lastName, profilePicture} = userList.find(user => user._id !== _id)\r\n      const avatarDetails = {\r\n        title: `${firstName} ${lastName}`,\r\n        img: profilePicture\r\n      }\r\n      setUser([avatarDetails])\r\n    }\r\n    return () => {\r\n    }\r\n  }, [userList, _id])\r\n  return <AvatarGroup data={user.length ? user : []} />\r\n}\r\n\r\nexport default UserAvatarGroup","import moment from 'moment'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport AddEditBtn from './addEditButtons'\r\nimport UserAvatarGroup from './avatarColumn'\r\n\r\nconst RequestorName = ({data: {userList}}) => {\r\n  const [user, setUser] = useState(null)\r\n  const {_id} = useSelector(state => state.auth.user)\r\n  useEffect(() => {\r\n    if (userList?.length) {\r\n      const {firstName, lastName} = userList.find(user => user._id !== _id)\r\n      setUser(`${firstName} ${lastName}`)\r\n    }\r\n    return () => {\r\n    }\r\n  }, [userList, _id])\r\n  return (<>\r\n    <span>{user}</span>\r\n  </>)\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: \"Profile Picture\",\r\n    selector: \"userList\",\r\n    sortable: true,\r\n    cell: (row) => <UserAvatarGroup data={row} />\r\n  },\r\n  {\r\n    name: \"Name\",\r\n    selector: \"name\",\r\n    sortable: true,\r\n    cell: (row) => <RequestorName data={row} />\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    selector: \"status\",\r\n    sortable: true,\r\n    cell: ({status}) => (<span className='text-capitalize'>{status}</span>)\r\n  },\r\n  {\r\n    name: \"When\",\r\n    selector: \"when\",\r\n    sortable: true,\r\n    cell: ({createdAt}) => (<span>{moment(new Date(parseInt(createdAt))).fromNow()}</span>)\r\n  },\r\n  {\r\n    name: \"Actions\",\r\n    sortable: false,\r\n    cell: (row) => (\r\n      <AddEditBtn data={row} isAdd={false} />\r\n    )\r\n  }\r\n]","import React, { Fragment, useEffect, useState } from 'react'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport LoaderComponent from '../components/Loader'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Card, Row, Col, Label, Input } from 'reactstrap'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather' \r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nimport {getUserChatRequests, removeChatRequests} from '@src/redux/actions/chatRequests'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Add New Modal Component\r\nimport {columns} from \"./components/ChatRequestColumns\"\r\n\r\nconst ChatRequests = props => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {loading, total, chatRequests} = useSelector(state => state.chatRequests)\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [limit, setLimit] = useState(6)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [requests, setRequests] = useState([])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserChatRequests(limit, currentPage, searchValue))\r\n        return () => {\r\n            dispatch(removeChatRequests())\r\n        }\r\n    }, [searchValue])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserChatRequests(limit, currentPage, searchValue))\r\n        if (chatRequests?.length) {\r\n            setRequests(chatRequests)\r\n        }\r\n        return () => {\r\n        }\r\n    }, [chatRequests])\r\n\r\n    const handleFilter = (value) => {\r\n        setSearchValue(value)\r\n        setTimeout(() => {\r\n            getUserChatRequests(limit, currentPage, value)\r\n        }, 100)\r\n    }\r\n\r\n    const handlePagination = page => {\r\n        dispatch(getUserChatRequests(limit, page.selected, searchValue))\r\n        setCurrentPage(page.selected + 1)\r\n    }\r\n\r\n    // ** Custom Pagination\r\n    const CustomPagination = () => {\r\n        return (\r\n        <ReactPaginate\r\n            previousLabel={''}\r\n            nextLabel={''}\r\n            pageCount={total || 1}\r\n            activeClassName='active'\r\n            forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageClassName={'page-item'}\r\n            nextLinkClassName={'page-link'}\r\n            nextClassName={'page-item next'}\r\n            previousClassName={'page-item prev'}\r\n            previousLinkClassName={'page-link'}\r\n            pageLinkClassName={'page-link'}\r\n            containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\r\n        />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Breadcrumbs breadCrumbTitle={<FormattedMessage id=\"ChatRequests\" />} breadCrumbActive={<FormattedMessage id=\"Chat Requests\" />} />\r\n            <Card>\r\n                <LoaderComponent loading={loading} />\r\n                <Row className='mx-0 p-1'>\r\n                    <Col className='d-flex mt-1' md='6' sm='12'>\r\n                        <Label className='mr-1' for='search-input'>\r\n                        Search\r\n                        </Label>\r\n                        <Input\r\n                        className='dataTable-filter mb-50'\r\n                        type='text'\r\n                        bsSize='sm'\r\n                        id='search-input'\r\n                        value={searchValue}\r\n                        onChange={e => handleFilter(e.currentTarget.value)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <DataTable\r\n                    noHeader\r\n                    pagination\r\n                    paginationServer\r\n                    columns={columns || []}\r\n                    paginationPerPage={limit}\r\n                    className='react-dataTable'\r\n                    sortIcon={<ChevronDown size={10} />}\r\n                    paginationDefaultPage={currentPage + 1}\r\n                    paginationComponent={CustomPagination}\r\n                    data={requests}\r\n                />\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatRequests"],"sourceRoot":""}